#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nav.API.SQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using Nav.API.Interfaces;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Demo Database NAV (10-0)")]
	public partial class Nav_DatabaseDataContext : System.Data.Linq.DataContext, IDatabaseContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertObject(Object instance);
    partial void UpdateObject(Object instance);
    partial void DeleteObject(Object instance);
    partial void InsertObject_Metadata(Object_Metadata instance);
    partial void UpdateObject_Metadata(Object_Metadata instance);
    partial void DeleteObject_Metadata(Object_Metadata instance);
    partial void InsertObject_Metadata_Snapshot(Object_Metadata_Snapshot instance);
    partial void UpdateObject_Metadata_Snapshot(Object_Metadata_Snapshot instance);
    partial void DeleteObject_Metadata_Snapshot(Object_Metadata_Snapshot instance);
    partial void InsertObject_Options(Object_Options instance);
    partial void UpdateObject_Options(Object_Options instance);
    partial void DeleteObject_Options(Object_Options instance);
    partial void InsertObject_Tracking(Object_Tracking instance);
    partial void UpdateObject_Tracking(Object_Tracking instance);
    partial void DeleteObject_Tracking(Object_Tracking instance);
    partial void InsertObject_Translation(Object_Translation instance);
    partial void UpdateObject_Translation(Object_Translation instance);
    partial void DeleteObject_Translation(Object_Translation instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertAL_BackUp(AL_BackUp instance);
    partial void UpdateAL_BackUp(AL_BackUp instance);
    partial void DeleteAL_BackUp(AL_BackUp instance);
    partial void InsertNAV_App(NAV_App instance);
    partial void UpdateNAV_App(NAV_App instance);
    partial void DeleteNAV_App(NAV_App instance);
    partial void InsertNAV_App_Object_Metadata(NAV_App_Object_Metadata instance);
    partial void UpdateNAV_App_Object_Metadata(NAV_App_Object_Metadata instance);
    partial void DeleteNAV_App_Object_Metadata(NAV_App_Object_Metadata instance);
    partial void InsertNAV_App_Installed_App(NAV_App_Installed_App instance);
    partial void UpdateNAV_App_Installed_App(NAV_App_Installed_App instance);
    partial void DeleteNAV_App_Installed_App(NAV_App_Installed_App instance);
    #endregion
		
		public Nav_DatabaseDataContext() : 
				base(global::Nav.API.Properties.Settings.Default.Demo_Database_NAV__10_0_ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Nav_DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Nav_DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Nav_DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Nav_DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Object> Object
		{
			get
			{
				return this.GetTable<Object>();
			}
		}
		
		public System.Data.Linq.Table<Object_Metadata> Object_Metadata
		{
			get
			{
				return this.GetTable<Object_Metadata>();
			}
		}
		
		public System.Data.Linq.Table<Object_Metadata_Snapshot> Object_Metadata_Snapshot
		{
			get
			{
				return this.GetTable<Object_Metadata_Snapshot>();
			}
		}
		
		public System.Data.Linq.Table<Object_Options> Object_Options
		{
			get
			{
				return this.GetTable<Object_Options>();
			}
		}
		
		public System.Data.Linq.Table<Object_Tracking> Object_Tracking
		{
			get
			{
				return this.GetTable<Object_Tracking>();
			}
		}
		
		public System.Data.Linq.Table<Object_Translation> Object_Translation
		{
			get
			{
				return this.GetTable<Object_Translation>();
			}
		}
		
		public System.Data.Linq.Table<Company> Company
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<AL_BackUp> AL_BackUp
		{
			get
			{
				return this.GetTable<AL_BackUp>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App> NAV_App
		{
			get
			{
				return this.GetTable<NAV_App>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Object_Metadata> NAV_App_Object_Metadata
		{
			get
			{
				return this.GetTable<NAV_App_Object_Metadata>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Installed_App> NAV_App_Installed_App
		{
			get
			{
				return this.GetTable<NAV_App_Installed_App>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object")]
	public partial class Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private int _Type;
		
		private string _Company_Name;
		
		private int _ID;
		
		private string _Name;
		
		private byte _Modified;
		
		private byte _Compiled;
		
		private System.Data.Linq.Binary _BLOB_Reference;
		
		private int _BLOB_Size;
		
		private int _DBM_Table_No_;
		
		private System.DateTime _Date;
		
		private System.DateTime _Time;
		
		private string _Version_List;
		
		private byte _Locked;
		
		private string _Locked_By;
		
		private EntitySet<Object_Metadata> _Object_Metadata;
		
		private EntitySet<Object_Options> _Object_Options;
		
		private EntitySet<Object_Tracking> _Object_Tracking;
		
		private EntitySet<Object_Translation> _Object_Translation;
		
		private EntityRef<Company> _Company;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedChanging(byte value);
    partial void OnModifiedChanged();
    partial void OnCompiledChanging(byte value);
    partial void OnCompiledChanged();
    partial void OnBLOB_ReferenceChanging(System.Data.Linq.Binary value);
    partial void OnBLOB_ReferenceChanged();
    partial void OnBLOB_SizeChanging(int value);
    partial void OnBLOB_SizeChanged();
    partial void OnDBM_Table_No_Changing(int value);
    partial void OnDBM_Table_No_Changed();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnVersion_ListChanging(string value);
    partial void OnVersion_ListChanged();
    partial void OnLockedChanging(byte value);
    partial void OnLockedChanged();
    partial void OnLocked_ByChanging(string value);
    partial void OnLocked_ByChanged();
    #endregion
		
		public Object()
		{
			this._Object_Metadata = new EntitySet<Object_Metadata>(new Action<Object_Metadata>(this.attach_Object_Metadata), new Action<Object_Metadata>(this.detach_Object_Metadata));
			this._Object_Options = new EntitySet<Object_Options>(new Action<Object_Options>(this.attach_Object_Options), new Action<Object_Options>(this.detach_Object_Options));
			this._Object_Tracking = new EntitySet<Object_Tracking>(new Action<Object_Tracking>(this.attach_Object_Tracking), new Action<Object_Tracking>(this.detach_Object_Tracking));
			this._Object_Translation = new EntitySet<Object_Translation>(new Action<Object_Translation>(this.attach_Object_Translation), new Action<Object_Translation>(this.detach_Object_Translation));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Company Name]", Storage="_Company_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compiled", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Compiled
		{
			get
			{
				return this._Compiled;
			}
			set
			{
				if ((this._Compiled != value))
				{
					this.OnCompiledChanging(value);
					this.SendPropertyChanging();
					this._Compiled = value;
					this.SendPropertyChanged("Compiled");
					this.OnCompiledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BLOB Reference]", Storage="_BLOB_Reference", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BLOB_Reference
		{
			get
			{
				return this._BLOB_Reference;
			}
			set
			{
				if ((this._BLOB_Reference != value))
				{
					this.OnBLOB_ReferenceChanging(value);
					this.SendPropertyChanging();
					this._BLOB_Reference = value;
					this.SendPropertyChanged("BLOB_Reference");
					this.OnBLOB_ReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BLOB Size]", Storage="_BLOB_Size", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int BLOB_Size
		{
			get
			{
				return this._BLOB_Size;
			}
			set
			{
				if ((this._BLOB_Size != value))
				{
					this.OnBLOB_SizeChanging(value);
					this.SendPropertyChanging();
					this._BLOB_Size = value;
					this.SendPropertyChanged("BLOB_Size");
					this.OnBLOB_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[DBM Table No_]", Storage="_DBM_Table_No_", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DBM_Table_No_
		{
			get
			{
				return this._DBM_Table_No_;
			}
			set
			{
				if ((this._DBM_Table_No_ != value))
				{
					this.OnDBM_Table_No_Changing(value);
					this.SendPropertyChanging();
					this._DBM_Table_No_ = value;
					this.SendPropertyChanged("DBM_Table_No_");
					this.OnDBM_Table_No_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version List]", Storage="_Version_List", DbType="VarChar(248) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Version_List
		{
			get
			{
				return this._Version_List;
			}
			set
			{
				if ((this._Version_List != value))
				{
					this.OnVersion_ListChanging(value);
					this.SendPropertyChanging();
					this._Version_List = value;
					this.SendPropertyChanged("Version_List");
					this.OnVersion_ListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Locked By]", Storage="_Locked_By", DbType="VarChar(132) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Locked_By
		{
			get
			{
				return this._Locked_By;
			}
			set
			{
				if ((this._Locked_By != value))
				{
					this.OnLocked_ByChanging(value);
					this.SendPropertyChanging();
					this._Locked_By = value;
					this.SendPropertyChanged("Locked_By");
					this.OnLocked_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Metadata", Storage="_Object_Metadata", ThisKey="Type,ID", OtherKey="Object_Type,Object_ID")]
		public EntitySet<Object_Metadata> Object_Metadata
		{
			get
			{
				return this._Object_Metadata;
			}
			set
			{
				this._Object_Metadata.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Options", Storage="_Object_Options", ThisKey="ID,Type", OtherKey="Object_ID,Object_Type")]
		public EntitySet<Object_Options> Object_Options
		{
			get
			{
				return this._Object_Options;
			}
			set
			{
				this._Object_Options.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Tracking", Storage="_Object_Tracking", ThisKey="Type,ID", OtherKey="Object_Type,Object_ID")]
		public EntitySet<Object_Tracking> Object_Tracking
		{
			get
			{
				return this._Object_Tracking;
			}
			set
			{
				this._Object_Tracking.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Translation", Storage="_Object_Translation", ThisKey="Type,ID", OtherKey="Object_Type,Object_ID")]
		public EntitySet<Object_Translation> Object_Translation
		{
			get
			{
				return this._Object_Translation;
			}
			set
			{
				this._Object_Translation.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Object", Storage="_Company", ThisKey="Company_Name", OtherKey="Name", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Object.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Object.Add(this);
						this._Company_Name = value.Name;
					}
					else
					{
						this._Company_Name = default(string);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Object_Metadata(Object_Metadata entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Object_Metadata(Object_Metadata entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_Object_Options(Object_Options entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Object_Options(Object_Options entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_Object_Tracking(Object_Tracking entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Object_Tracking(Object_Tracking entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
		
		private void attach_Object_Translation(Object_Translation entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Object_Translation(Object_Translation entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Object Metadata]")]
	public partial class Object_Metadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private int _Object_Type;
		
		private int _Object_ID;
		
		private System.Data.Linq.Binary _Metadata;
		
		private System.Data.Linq.Binary _User_Code;
		
		private System.Data.Linq.Binary _User_AL_Code;
		
		private int _Metadata_Version;
		
		private string _Hash;
		
		private string _Object_Subtype;
		
		private byte _Has_Subscribers;
		
		private EntitySet<Object_Metadata_Snapshot> _Object_Metadata_Snapshot;
		
		private EntityRef<Object> _Object;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnObject_TypeChanging(int value);
    partial void OnObject_TypeChanged();
    partial void OnObject_IDChanging(int value);
    partial void OnObject_IDChanged();
    partial void OnMetadataChanging(System.Data.Linq.Binary value);
    partial void OnMetadataChanged();
    partial void OnUser_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_CodeChanged();
    partial void OnUser_AL_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_AL_CodeChanged();
    partial void OnMetadata_VersionChanging(int value);
    partial void OnMetadata_VersionChanged();
    partial void OnHashChanging(string value);
    partial void OnHashChanged();
    partial void OnObject_SubtypeChanging(string value);
    partial void OnObject_SubtypeChanged();
    partial void OnHas_SubscribersChanging(byte value);
    partial void OnHas_SubscribersChanged();
    #endregion
		
		public Object_Metadata()
		{
			this._Object_Metadata_Snapshot = new EntitySet<Object_Metadata_Snapshot>(new Action<Object_Metadata_Snapshot>(this.attach_Object_Metadata_Snapshot), new Action<Object_Metadata_Snapshot>(this.detach_Object_Metadata_Snapshot));
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Type]", Storage="_Object_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_Type
		{
			get
			{
				return this._Object_Type;
			}
			set
			{
				if ((this._Object_Type != value))
				{
					this.OnObject_TypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Type = value;
					this.SendPropertyChanged("Object_Type");
					this.OnObject_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object ID]", Storage="_Object_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_ID
		{
			get
			{
				return this._Object_ID;
			}
			set
			{
				if ((this._Object_ID != value))
				{
					this.OnObject_IDChanging(value);
					this.SendPropertyChanging();
					this._Object_ID = value;
					this.SendPropertyChanged("Object_ID");
					this.OnObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metadata", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Metadata
		{
			get
			{
				return this._Metadata;
			}
			set
			{
				if ((this._Metadata != value))
				{
					this.OnMetadataChanging(value);
					this.SendPropertyChanging();
					this._Metadata = value;
					this.SendPropertyChanged("Metadata");
					this.OnMetadataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User Code]", Storage="_User_Code", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_Code
		{
			get
			{
				return this._User_Code;
			}
			set
			{
				if ((this._User_Code != value))
				{
					this.OnUser_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_Code = value;
					this.SendPropertyChanged("User_Code");
					this.OnUser_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User AL Code]", Storage="_User_AL_Code", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_AL_Code
		{
			get
			{
				return this._User_AL_Code;
			}
			set
			{
				if ((this._User_AL_Code != value))
				{
					this.OnUser_AL_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_AL_Code = value;
					this.SendPropertyChanged("User_AL_Code");
					this.OnUser_AL_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Metadata Version]", Storage="_Metadata_Version", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Metadata_Version
		{
			get
			{
				return this._Metadata_Version;
			}
			set
			{
				if ((this._Metadata_Version != value))
				{
					this.OnMetadata_VersionChanging(value);
					this.SendPropertyChanging();
					this._Metadata_Version = value;
					this.SendPropertyChanged("Metadata_Version");
					this.OnMetadata_VersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="NVarChar(32) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Subtype]", Storage="_Object_Subtype", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Object_Subtype
		{
			get
			{
				return this._Object_Subtype;
			}
			set
			{
				if ((this._Object_Subtype != value))
				{
					this.OnObject_SubtypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Subtype = value;
					this.SendPropertyChanged("Object_Subtype");
					this.OnObject_SubtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Has Subscribers]", Storage="_Has_Subscribers", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Has_Subscribers
		{
			get
			{
				return this._Has_Subscribers;
			}
			set
			{
				if ((this._Has_Subscribers != value))
				{
					this.OnHas_SubscribersChanging(value);
					this.SendPropertyChanging();
					this._Has_Subscribers = value;
					this.SendPropertyChanged("Has_Subscribers");
					this.OnHas_SubscribersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Metadata_Object_Metadata_Snapshot", Storage="_Object_Metadata_Snapshot", ThisKey="Object_Type,Object_ID", OtherKey="Object_Type,Object_ID")]
		public EntitySet<Object_Metadata_Snapshot> Object_Metadata_Snapshot
		{
			get
			{
				return this._Object_Metadata_Snapshot;
			}
			set
			{
				this._Object_Metadata_Snapshot.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Metadata", Storage="_Object", ThisKey="Object_Type,Object_ID", OtherKey="Type,ID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Object_Metadata.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Object_Metadata.Add(this);
						this._Object_Type = value.Type;
						this._Object_ID = value.ID;
					}
					else
					{
						this._Object_Type = default(int);
						this._Object_ID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Object_Metadata_Snapshot(Object_Metadata_Snapshot entity)
		{
			this.SendPropertyChanging();
			entity.Object_Metadata = this;
		}
		
		private void detach_Object_Metadata_Snapshot(Object_Metadata_Snapshot entity)
		{
			this.SendPropertyChanging();
			entity.Object_Metadata = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Object Metadata Snapshot]")]
	public partial class Object_Metadata_Snapshot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private int _Object_Type;
		
		private int _Object_ID;
		
		private System.Data.Linq.Binary _Metadata;
		
		private string _Name;
		
		private byte _Data_Per_Company;
		
		private string _Hash;
		
		private System.Data.Linq.Binary _Base_Metadata;
		
		private string _Base_Hash;
		
		private EntityRef<Object_Metadata> _Object_Metadata;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnObject_TypeChanging(int value);
    partial void OnObject_TypeChanged();
    partial void OnObject_IDChanging(int value);
    partial void OnObject_IDChanged();
    partial void OnMetadataChanging(System.Data.Linq.Binary value);
    partial void OnMetadataChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnData_Per_CompanyChanging(byte value);
    partial void OnData_Per_CompanyChanged();
    partial void OnHashChanging(string value);
    partial void OnHashChanged();
    partial void OnBase_MetadataChanging(System.Data.Linq.Binary value);
    partial void OnBase_MetadataChanged();
    partial void OnBase_HashChanging(string value);
    partial void OnBase_HashChanged();
    #endregion
		
		public Object_Metadata_Snapshot()
		{
			this._Object_Metadata = default(EntityRef<Object_Metadata>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Type]", Storage="_Object_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_Type
		{
			get
			{
				return this._Object_Type;
			}
			set
			{
				if ((this._Object_Type != value))
				{
					this.OnObject_TypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Type = value;
					this.SendPropertyChanged("Object_Type");
					this.OnObject_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object ID]", Storage="_Object_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_ID
		{
			get
			{
				return this._Object_ID;
			}
			set
			{
				if ((this._Object_ID != value))
				{
					this.OnObject_IDChanging(value);
					this.SendPropertyChanging();
					this._Object_ID = value;
					this.SendPropertyChanged("Object_ID");
					this.OnObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metadata", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Metadata
		{
			get
			{
				return this._Metadata;
			}
			set
			{
				if ((this._Metadata != value))
				{
					this.OnMetadataChanging(value);
					this.SendPropertyChanging();
					this._Metadata = value;
					this.SendPropertyChanged("Metadata");
					this.OnMetadataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Data Per Company]", Storage="_Data_Per_Company", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Data_Per_Company
		{
			get
			{
				return this._Data_Per_Company;
			}
			set
			{
				if ((this._Data_Per_Company != value))
				{
					this.OnData_Per_CompanyChanging(value);
					this.SendPropertyChanging();
					this._Data_Per_Company = value;
					this.SendPropertyChanged("Data_Per_Company");
					this.OnData_Per_CompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="NVarChar(32) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Base Metadata]", Storage="_Base_Metadata", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Base_Metadata
		{
			get
			{
				return this._Base_Metadata;
			}
			set
			{
				if ((this._Base_Metadata != value))
				{
					this.OnBase_MetadataChanging(value);
					this.SendPropertyChanging();
					this._Base_Metadata = value;
					this.SendPropertyChanged("Base_Metadata");
					this.OnBase_MetadataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Base Hash]", Storage="_Base_Hash", DbType="NVarChar(32) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Base_Hash
		{
			get
			{
				return this._Base_Hash;
			}
			set
			{
				if ((this._Base_Hash != value))
				{
					this.OnBase_HashChanging(value);
					this.SendPropertyChanging();
					this._Base_Hash = value;
					this.SendPropertyChanged("Base_Hash");
					this.OnBase_HashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Metadata_Object_Metadata_Snapshot", Storage="_Object_Metadata", ThisKey="Object_Type,Object_ID", OtherKey="Object_Type,Object_ID", IsForeignKey=true)]
		public Object_Metadata Object_Metadata
		{
			get
			{
				return this._Object_Metadata.Entity;
			}
			set
			{
				Object_Metadata previousValue = this._Object_Metadata.Entity;
				if (((previousValue != value) 
							|| (this._Object_Metadata.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object_Metadata.Entity = null;
						previousValue.Object_Metadata_Snapshot.Remove(this);
					}
					this._Object_Metadata.Entity = value;
					if ((value != null))
					{
						value.Object_Metadata_Snapshot.Add(this);
						this._Object_Type = value.Object_Type;
						this._Object_ID = value.Object_ID;
					}
					else
					{
						this._Object_Type = default(int);
						this._Object_ID = default(int);
					}
					this.SendPropertyChanged("Object_Metadata");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Object Options]")]
	public partial class Object_Options : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private string _Parameter_Name;
		
		private int _Object_ID;
		
		private int _Object_Type;
		
		private string _Company_Name;
		
		private string _User_Name;
		
		private System.Data.Linq.Binary _Option_Data;
		
		private byte _Public_Visible;
		
		private byte _Temporary;
		
		private EntityRef<Object> _Object;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnParameter_NameChanging(string value);
    partial void OnParameter_NameChanged();
    partial void OnObject_IDChanging(int value);
    partial void OnObject_IDChanged();
    partial void OnObject_TypeChanging(int value);
    partial void OnObject_TypeChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnUser_NameChanging(string value);
    partial void OnUser_NameChanged();
    partial void OnOption_DataChanging(System.Data.Linq.Binary value);
    partial void OnOption_DataChanged();
    partial void OnPublic_VisibleChanging(byte value);
    partial void OnPublic_VisibleChanged();
    partial void OnTemporaryChanging(byte value);
    partial void OnTemporaryChanged();
    #endregion
		
		public Object_Options()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Parameter Name]", Storage="_Parameter_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Parameter_Name
		{
			get
			{
				return this._Parameter_Name;
			}
			set
			{
				if ((this._Parameter_Name != value))
				{
					this.OnParameter_NameChanging(value);
					this.SendPropertyChanging();
					this._Parameter_Name = value;
					this.SendPropertyChanged("Parameter_Name");
					this.OnParameter_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object ID]", Storage="_Object_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_ID
		{
			get
			{
				return this._Object_ID;
			}
			set
			{
				if ((this._Object_ID != value))
				{
					this.OnObject_IDChanging(value);
					this.SendPropertyChanging();
					this._Object_ID = value;
					this.SendPropertyChanged("Object_ID");
					this.OnObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Type]", Storage="_Object_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_Type
		{
			get
			{
				return this._Object_Type;
			}
			set
			{
				if ((this._Object_Type != value))
				{
					this.OnObject_TypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Type = value;
					this.SendPropertyChanged("Object_Type");
					this.OnObject_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Company Name]", Storage="_Company_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User Name]", Storage="_User_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string User_Name
		{
			get
			{
				return this._User_Name;
			}
			set
			{
				if ((this._User_Name != value))
				{
					this.OnUser_NameChanging(value);
					this.SendPropertyChanging();
					this._User_Name = value;
					this.SendPropertyChanged("User_Name");
					this.OnUser_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Option Data]", Storage="_Option_Data", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Option_Data
		{
			get
			{
				return this._Option_Data;
			}
			set
			{
				if ((this._Option_Data != value))
				{
					this.OnOption_DataChanging(value);
					this.SendPropertyChanging();
					this._Option_Data = value;
					this.SendPropertyChanged("Option_Data");
					this.OnOption_DataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Public Visible]", Storage="_Public_Visible", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Public_Visible
		{
			get
			{
				return this._Public_Visible;
			}
			set
			{
				if ((this._Public_Visible != value))
				{
					this.OnPublic_VisibleChanging(value);
					this.SendPropertyChanging();
					this._Public_Visible = value;
					this.SendPropertyChanged("Public_Visible");
					this.OnPublic_VisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temporary", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Temporary
		{
			get
			{
				return this._Temporary;
			}
			set
			{
				if ((this._Temporary != value))
				{
					this.OnTemporaryChanging(value);
					this.SendPropertyChanging();
					this._Temporary = value;
					this.SendPropertyChanged("Temporary");
					this.OnTemporaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Options", Storage="_Object", ThisKey="Object_ID,Object_Type", OtherKey="ID,Type", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Object_Options.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Object_Options.Add(this);
						this._Object_ID = value.ID;
						this._Object_Type = value.Type;
					}
					else
					{
						this._Object_ID = default(int);
						this._Object_Type = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Object Tracking]")]
	public partial class Object_Tracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private int _Object_Type;
		
		private int _Object_ID;
		
		private int _Change_Type;
		
		private System.Guid _App_Package_ID;
		
		private string _Tenant_ID;
		
		private long _Object_Timestamp;
		
		private EntityRef<Object> _Object;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnObject_TypeChanging(int value);
    partial void OnObject_TypeChanged();
    partial void OnObject_IDChanging(int value);
    partial void OnObject_IDChanged();
    partial void OnChange_TypeChanging(int value);
    partial void OnChange_TypeChanged();
    partial void OnApp_Package_IDChanging(System.Guid value);
    partial void OnApp_Package_IDChanged();
    partial void OnTenant_IDChanging(string value);
    partial void OnTenant_IDChanged();
    partial void OnObject_TimestampChanging(long value);
    partial void OnObject_TimestampChanged();
    #endregion
		
		public Object_Tracking()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Type]", Storage="_Object_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_Type
		{
			get
			{
				return this._Object_Type;
			}
			set
			{
				if ((this._Object_Type != value))
				{
					this.OnObject_TypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Type = value;
					this.SendPropertyChanged("Object_Type");
					this.OnObject_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object ID]", Storage="_Object_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_ID
		{
			get
			{
				return this._Object_ID;
			}
			set
			{
				if ((this._Object_ID != value))
				{
					this.OnObject_IDChanging(value);
					this.SendPropertyChanging();
					this._Object_ID = value;
					this.SendPropertyChanged("Object_ID");
					this.OnObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Change Type]", Storage="_Change_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Change_Type
		{
			get
			{
				return this._Change_Type;
			}
			set
			{
				if ((this._Change_Type != value))
				{
					this.OnChange_TypeChanging(value);
					this.SendPropertyChanging();
					this._Change_Type = value;
					this.SendPropertyChanged("Change_Type");
					this.OnChange_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[App Package ID]", Storage="_App_Package_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid App_Package_ID
		{
			get
			{
				return this._App_Package_ID;
			}
			set
			{
				if ((this._App_Package_ID != value))
				{
					this.OnApp_Package_IDChanging(value);
					this.SendPropertyChanging();
					this._App_Package_ID = value;
					this.SendPropertyChanged("App_Package_ID");
					this.OnApp_Package_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Tenant ID]", Storage="_Tenant_ID", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Tenant_ID
		{
			get
			{
				return this._Tenant_ID;
			}
			set
			{
				if ((this._Tenant_ID != value))
				{
					this.OnTenant_IDChanging(value);
					this.SendPropertyChanging();
					this._Tenant_ID = value;
					this.SendPropertyChanged("Tenant_ID");
					this.OnTenant_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Timestamp]", Storage="_Object_Timestamp", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long Object_Timestamp
		{
			get
			{
				return this._Object_Timestamp;
			}
			set
			{
				if ((this._Object_Timestamp != value))
				{
					this.OnObject_TimestampChanging(value);
					this.SendPropertyChanging();
					this._Object_Timestamp = value;
					this.SendPropertyChanged("Object_Timestamp");
					this.OnObject_TimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Tracking", Storage="_Object", ThisKey="Object_Type,Object_ID", OtherKey="Type,ID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Object_Tracking.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Object_Tracking.Add(this);
						this._Object_Type = value.Type;
						this._Object_ID = value.ID;
					}
					else
					{
						this._Object_Type = default(int);
						this._Object_ID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Object Translation]")]
	public partial class Object_Translation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private int _Object_Type;
		
		private int _Object_ID;
		
		private int _Language_ID;
		
		private string _Description;
		
		private EntityRef<Object> _Object;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnObject_TypeChanging(int value);
    partial void OnObject_TypeChanged();
    partial void OnObject_IDChanging(int value);
    partial void OnObject_IDChanged();
    partial void OnLanguage_IDChanging(int value);
    partial void OnLanguage_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Object_Translation()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Type]", Storage="_Object_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_Type
		{
			get
			{
				return this._Object_Type;
			}
			set
			{
				if ((this._Object_Type != value))
				{
					this.OnObject_TypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Type = value;
					this.SendPropertyChanged("Object_Type");
					this.OnObject_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object ID]", Storage="_Object_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_ID
		{
			get
			{
				return this._Object_ID;
			}
			set
			{
				if ((this._Object_ID != value))
				{
					this.OnObject_IDChanging(value);
					this.SendPropertyChanging();
					this._Object_ID = value;
					this.SendPropertyChanged("Object_ID");
					this.OnObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Language ID]", Storage="_Language_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Language_ID
		{
			get
			{
				return this._Language_ID;
			}
			set
			{
				if ((this._Language_ID != value))
				{
					this.OnLanguage_IDChanging(value);
					this.SendPropertyChanging();
					this._Language_ID = value;
					this.SendPropertyChanged("Language_ID");
					this.OnLanguage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Translation", Storage="_Object", ThisKey="Object_Type,Object_ID", OtherKey="Type,ID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Object_Translation.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Object_Translation.Add(this);
						this._Object_Type = value.Type;
						this._Object_ID = value.ID;
					}
					else
					{
						this._Object_Type = default(int);
						this._Object_ID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private string _Name;
		
		private EntitySet<Object> _Object;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Company()
		{
			this._Object = new EntitySet<Object>(new Action<Object>(this.attach_Object), new Action<Object>(this.detach_Object));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Object", Storage="_Object", ThisKey="Name", OtherKey="Company_Name")]
		public EntitySet<Object> Object
		{
			get
			{
				return this._Object;
			}
			set
			{
				this._Object.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Object(Object entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Object(Object entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[AL BackUp]")]
	public partial class AL_BackUp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Type;
		
		private string _Company_Name;
		
		private int _ID;
		
		private System.Data.Linq.Binary _AL_Code;
		
		private System.Nullable<int> _AL_Code_Size;
		
		private System.Data.Linq.Binary _Code;
		
		private System.Data.Linq.Binary _User_Code;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAL_CodeChanging(System.Data.Linq.Binary value);
    partial void OnAL_CodeChanged();
    partial void OnAL_Code_SizeChanging(System.Nullable<int> value);
    partial void OnAL_Code_SizeChanged();
    partial void OnCodeChanging(System.Data.Linq.Binary value);
    partial void OnCodeChanged();
    partial void OnUser_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_CodeChanged();
    #endregion
		
		public AL_BackUp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="int not null", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Company Name]", Storage="_Company_Name", DbType="varchar(30) not null", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="int not null", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[AL Code]", Storage="_AL_Code", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary AL_Code
		{
			get
			{
				return this._AL_Code;
			}
			set
			{
				if ((this._AL_Code != value))
				{
					this.OnAL_CodeChanging(value);
					this.SendPropertyChanging();
					this._AL_Code = value;
					this.SendPropertyChanged("AL_Code");
					this.OnAL_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[AL Code Size]", Storage="_AL_Code_Size", DbType="int not null", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AL_Code_Size
		{
			get
			{
				return this._AL_Code_Size;
			}
			set
			{
				if ((this._AL_Code_Size != value))
				{
					this.OnAL_Code_SizeChanging(value);
					this.SendPropertyChanging();
					this._AL_Code_Size = value;
					this.SendPropertyChanged("AL_Code_Size");
					this.OnAL_Code_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User Code]", Storage="_User_Code", DbType="image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_Code
		{
			get
			{
				return this._User_Code;
			}
			set
			{
				if ((this._User_Code != value))
				{
					this.OnUser_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_Code = value;
					this.SendPropertyChanged("User_Code");
					this.OnUser_CodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App]")]
	public partial class NAV_App : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _Package_ID;
		
		private System.Guid _ID;
		
		private string _Name;
		
		private string _Publisher;
		
		private int _Version_Major;
		
		private int _Version_Minor;
		
		private int _Version_Build;
		
		private int _Version_Revision;
		
		private int _Compatibility_Major;
		
		private int _Compatibility_Minor;
		
		private int _Compatibility_Build;
		
		private int _Compatibility_Revision;
		
		private string _Brief;
		
		private System.Data.Linq.Binary _Description;
		
		private string _Privacy_Statement;
		
		private string _EULA;
		
		private string _Url;
		
		private string _Help;
		
		private System.Guid _Logo;
		
		private System.Guid _Screenshots;
		
		private System.Data.Linq.Binary _Blob;
		
		private EntitySet<NAV_App_Object_Metadata> _NAV_App_Object_Metadata;
		
		private EntitySet<NAV_App_Installed_App> _NAV_App_Installed_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnPackage_IDChanging(System.Guid value);
    partial void OnPackage_IDChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnVersion_MajorChanging(int value);
    partial void OnVersion_MajorChanged();
    partial void OnVersion_MinorChanging(int value);
    partial void OnVersion_MinorChanged();
    partial void OnVersion_BuildChanging(int value);
    partial void OnVersion_BuildChanged();
    partial void OnVersion_RevisionChanging(int value);
    partial void OnVersion_RevisionChanged();
    partial void OnCompatibility_MajorChanging(int value);
    partial void OnCompatibility_MajorChanged();
    partial void OnCompatibility_MinorChanging(int value);
    partial void OnCompatibility_MinorChanged();
    partial void OnCompatibility_BuildChanging(int value);
    partial void OnCompatibility_BuildChanged();
    partial void OnCompatibility_RevisionChanging(int value);
    partial void OnCompatibility_RevisionChanged();
    partial void OnBriefChanging(string value);
    partial void OnBriefChanged();
    partial void OnDescriptionChanging(System.Data.Linq.Binary value);
    partial void OnDescriptionChanged();
    partial void OnPrivacy_StatementChanging(string value);
    partial void OnPrivacy_StatementChanged();
    partial void OnEULAChanging(string value);
    partial void OnEULAChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnHelpChanging(string value);
    partial void OnHelpChanged();
    partial void OnLogoChanging(System.Guid value);
    partial void OnLogoChanged();
    partial void OnScreenshotsChanging(System.Guid value);
    partial void OnScreenshotsChanged();
    partial void OnBlobChanging(System.Data.Linq.Binary value);
    partial void OnBlobChanged();
    #endregion
		
		public NAV_App()
		{
			this._NAV_App_Object_Metadata = new EntitySet<NAV_App_Object_Metadata>(new Action<NAV_App_Object_Metadata>(this.attach_NAV_App_Object_Metadata), new Action<NAV_App_Object_Metadata>(this.detach_NAV_App_Object_Metadata));
			this._NAV_App_Installed_App = new EntitySet<NAV_App_Installed_App>(new Action<NAV_App_Installed_App>(this.attach_NAV_App_Installed_App), new Action<NAV_App_Installed_App>(this.detach_NAV_App_Installed_App));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Package ID]", Storage="_Package_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Package_ID
		{
			get
			{
				return this._Package_ID;
			}
			set
			{
				if ((this._Package_ID != value))
				{
					this.OnPackage_IDChanging(value);
					this.SendPropertyChanging();
					this._Package_ID = value;
					this.SendPropertyChanged("Package_ID");
					this.OnPackage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Major]", Storage="_Version_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Major
		{
			get
			{
				return this._Version_Major;
			}
			set
			{
				if ((this._Version_Major != value))
				{
					this.OnVersion_MajorChanging(value);
					this.SendPropertyChanging();
					this._Version_Major = value;
					this.SendPropertyChanged("Version_Major");
					this.OnVersion_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Minor]", Storage="_Version_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Minor
		{
			get
			{
				return this._Version_Minor;
			}
			set
			{
				if ((this._Version_Minor != value))
				{
					this.OnVersion_MinorChanging(value);
					this.SendPropertyChanging();
					this._Version_Minor = value;
					this.SendPropertyChanged("Version_Minor");
					this.OnVersion_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Build]", Storage="_Version_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Build
		{
			get
			{
				return this._Version_Build;
			}
			set
			{
				if ((this._Version_Build != value))
				{
					this.OnVersion_BuildChanging(value);
					this.SendPropertyChanging();
					this._Version_Build = value;
					this.SendPropertyChanged("Version_Build");
					this.OnVersion_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Revision]", Storage="_Version_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Revision
		{
			get
			{
				return this._Version_Revision;
			}
			set
			{
				if ((this._Version_Revision != value))
				{
					this.OnVersion_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Version_Revision = value;
					this.SendPropertyChanged("Version_Revision");
					this.OnVersion_RevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Major]", Storage="_Compatibility_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Major
		{
			get
			{
				return this._Compatibility_Major;
			}
			set
			{
				if ((this._Compatibility_Major != value))
				{
					this.OnCompatibility_MajorChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Major = value;
					this.SendPropertyChanged("Compatibility_Major");
					this.OnCompatibility_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Minor]", Storage="_Compatibility_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Minor
		{
			get
			{
				return this._Compatibility_Minor;
			}
			set
			{
				if ((this._Compatibility_Minor != value))
				{
					this.OnCompatibility_MinorChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Minor = value;
					this.SendPropertyChanged("Compatibility_Minor");
					this.OnCompatibility_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Build]", Storage="_Compatibility_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Build
		{
			get
			{
				return this._Compatibility_Build;
			}
			set
			{
				if ((this._Compatibility_Build != value))
				{
					this.OnCompatibility_BuildChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Build = value;
					this.SendPropertyChanged("Compatibility_Build");
					this.OnCompatibility_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Revision]", Storage="_Compatibility_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Revision
		{
			get
			{
				return this._Compatibility_Revision;
			}
			set
			{
				if ((this._Compatibility_Revision != value))
				{
					this.OnCompatibility_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Revision = value;
					this.SendPropertyChanged("Compatibility_Revision");
					this.OnCompatibility_RevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brief", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Brief
		{
			get
			{
				return this._Brief;
			}
			set
			{
				if ((this._Brief != value))
				{
					this.OnBriefChanging(value);
					this.SendPropertyChanging();
					this._Brief = value;
					this.SendPropertyChanged("Brief");
					this.OnBriefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Privacy Statement]", Storage="_Privacy_Statement", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Privacy_Statement
		{
			get
			{
				return this._Privacy_Statement;
			}
			set
			{
				if ((this._Privacy_Statement != value))
				{
					this.OnPrivacy_StatementChanging(value);
					this.SendPropertyChanging();
					this._Privacy_Statement = value;
					this.SendPropertyChanged("Privacy_Statement");
					this.OnPrivacy_StatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EULA", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EULA
		{
			get
			{
				return this._EULA;
			}
			set
			{
				if ((this._EULA != value))
				{
					this.OnEULAChanging(value);
					this.SendPropertyChanging();
					this._EULA = value;
					this.SendPropertyChanged("EULA");
					this.OnEULAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Help", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Help
		{
			get
			{
				return this._Help;
			}
			set
			{
				if ((this._Help != value))
				{
					this.OnHelpChanging(value);
					this.SendPropertyChanging();
					this._Help = value;
					this.SendPropertyChanged("Help");
					this.OnHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screenshots", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Screenshots
		{
			get
			{
				return this._Screenshots;
			}
			set
			{
				if ((this._Screenshots != value))
				{
					this.OnScreenshotsChanging(value);
					this.SendPropertyChanging();
					this._Screenshots = value;
					this.SendPropertyChanged("Screenshots");
					this.OnScreenshotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blob", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Blob
		{
			get
			{
				return this._Blob;
			}
			set
			{
				if ((this._Blob != value))
				{
					this.OnBlobChanging(value);
					this.SendPropertyChanging();
					this._Blob = value;
					this.SendPropertyChanged("Blob");
					this.OnBlobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Object_Metadata", Storage="_NAV_App_Object_Metadata", ThisKey="Package_ID", OtherKey="App_Package_ID")]
		public EntitySet<NAV_App_Object_Metadata> NAV_App_Object_Metadata
		{
			get
			{
				return this._NAV_App_Object_Metadata;
			}
			set
			{
				this._NAV_App_Object_Metadata.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Installed_App", Storage="_NAV_App_Installed_App", ThisKey="Package_ID", OtherKey="Package_ID")]
		public EntitySet<NAV_App_Installed_App> NAV_App_Installed_App
		{
			get
			{
				return this._NAV_App_Installed_App;
			}
			set
			{
				this._NAV_App_Installed_App.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NAV_App_Object_Metadata(NAV_App_Object_Metadata entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = this;
		}
		
		private void detach_NAV_App_Object_Metadata(NAV_App_Object_Metadata entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = null;
		}
		
		private void attach_NAV_App_Installed_App(NAV_App_Installed_App entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = this;
		}
		
		private void detach_NAV_App_Installed_App(NAV_App_Installed_App entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Object Metadata]")]
	public partial class NAV_App_Object_Metadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _App_Package_ID;
		
		private int _Object_Type;
		
		private int _Object_ID;
		
		private int _Metadata_Format;
		
		private System.Data.Linq.Binary _Metadata;
		
		private System.Data.Linq.Binary _User_Code;
		
		private System.Data.Linq.Binary _User_AL_Code;
		
		private int _Metadata_Version;
		
		private string _Object_Subtype;
		
		private string _Object_Name;
		
		private EntityRef<NAV_App> _NAV_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnApp_Package_IDChanging(System.Guid value);
    partial void OnApp_Package_IDChanged();
    partial void OnObject_TypeChanging(int value);
    partial void OnObject_TypeChanged();
    partial void OnObject_IDChanging(int value);
    partial void OnObject_IDChanged();
    partial void OnMetadata_FormatChanging(int value);
    partial void OnMetadata_FormatChanged();
    partial void OnMetadataChanging(System.Data.Linq.Binary value);
    partial void OnMetadataChanged();
    partial void OnUser_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_CodeChanged();
    partial void OnUser_AL_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_AL_CodeChanged();
    partial void OnMetadata_VersionChanging(int value);
    partial void OnMetadata_VersionChanged();
    partial void OnObject_SubtypeChanging(string value);
    partial void OnObject_SubtypeChanged();
    partial void OnObject_NameChanging(string value);
    partial void OnObject_NameChanged();
    #endregion
		
		public NAV_App_Object_Metadata()
		{
			this._NAV_App = default(EntityRef<NAV_App>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[App Package ID]", Storage="_App_Package_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid App_Package_ID
		{
			get
			{
				return this._App_Package_ID;
			}
			set
			{
				if ((this._App_Package_ID != value))
				{
					this.OnApp_Package_IDChanging(value);
					this.SendPropertyChanging();
					this._App_Package_ID = value;
					this.SendPropertyChanged("App_Package_ID");
					this.OnApp_Package_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Type]", Storage="_Object_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_Type
		{
			get
			{
				return this._Object_Type;
			}
			set
			{
				if ((this._Object_Type != value))
				{
					this.OnObject_TypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Type = value;
					this.SendPropertyChanged("Object_Type");
					this.OnObject_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object ID]", Storage="_Object_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_ID
		{
			get
			{
				return this._Object_ID;
			}
			set
			{
				if ((this._Object_ID != value))
				{
					this.OnObject_IDChanging(value);
					this.SendPropertyChanging();
					this._Object_ID = value;
					this.SendPropertyChanged("Object_ID");
					this.OnObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Metadata Format]", Storage="_Metadata_Format", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Metadata_Format
		{
			get
			{
				return this._Metadata_Format;
			}
			set
			{
				if ((this._Metadata_Format != value))
				{
					this.OnMetadata_FormatChanging(value);
					this.SendPropertyChanging();
					this._Metadata_Format = value;
					this.SendPropertyChanged("Metadata_Format");
					this.OnMetadata_FormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metadata", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Metadata
		{
			get
			{
				return this._Metadata;
			}
			set
			{
				if ((this._Metadata != value))
				{
					this.OnMetadataChanging(value);
					this.SendPropertyChanging();
					this._Metadata = value;
					this.SendPropertyChanged("Metadata");
					this.OnMetadataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User Code]", Storage="_User_Code", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_Code
		{
			get
			{
				return this._User_Code;
			}
			set
			{
				if ((this._User_Code != value))
				{
					this.OnUser_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_Code = value;
					this.SendPropertyChanged("User_Code");
					this.OnUser_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User AL Code]", Storage="_User_AL_Code", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_AL_Code
		{
			get
			{
				return this._User_AL_Code;
			}
			set
			{
				if ((this._User_AL_Code != value))
				{
					this.OnUser_AL_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_AL_Code = value;
					this.SendPropertyChanged("User_AL_Code");
					this.OnUser_AL_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Metadata Version]", Storage="_Metadata_Version", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Metadata_Version
		{
			get
			{
				return this._Metadata_Version;
			}
			set
			{
				if ((this._Metadata_Version != value))
				{
					this.OnMetadata_VersionChanging(value);
					this.SendPropertyChanging();
					this._Metadata_Version = value;
					this.SendPropertyChanged("Metadata_Version");
					this.OnMetadata_VersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Subtype]", Storage="_Object_Subtype", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Object_Subtype
		{
			get
			{
				return this._Object_Subtype;
			}
			set
			{
				if ((this._Object_Subtype != value))
				{
					this.OnObject_SubtypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Subtype = value;
					this.SendPropertyChanged("Object_Subtype");
					this.OnObject_SubtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Name]", Storage="_Object_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Object_Name
		{
			get
			{
				return this._Object_Name;
			}
			set
			{
				if ((this._Object_Name != value))
				{
					this.OnObject_NameChanging(value);
					this.SendPropertyChanging();
					this._Object_Name = value;
					this.SendPropertyChanged("Object_Name");
					this.OnObject_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Object_Metadata", Storage="_NAV_App", ThisKey="App_Package_ID", OtherKey="Package_ID", IsForeignKey=true)]
		public NAV_App NAV_App
		{
			get
			{
				return this._NAV_App.Entity;
			}
			set
			{
				NAV_App previousValue = this._NAV_App.Entity;
				if (((previousValue != value) 
							|| (this._NAV_App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAV_App.Entity = null;
						previousValue.NAV_App_Object_Metadata.Remove(this);
					}
					this._NAV_App.Entity = value;
					if ((value != null))
					{
						value.NAV_App_Object_Metadata.Add(this);
						this._App_Package_ID = value.Package_ID;
					}
					else
					{
						this._App_Package_ID = default(System.Guid);
					}
					this.SendPropertyChanged("NAV_App");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Installed App]")]
	public partial class NAV_App_Installed_App : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _App_ID;
		
		private System.Guid _Package_ID;
		
		private string _Name;
		
		private string _Publisher;
		
		private int _Version_Major;
		
		private int _Version_Minor;
		
		private int _Version_Build;
		
		private int _Version_Revision;
		
		private int _Compatibility_Major;
		
		private int _Compatibility_Minor;
		
		private int _Compatibility_Build;
		
		private int _Compatibility_Revision;
		
		private EntityRef<NAV_App> _NAV_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnApp_IDChanging(System.Guid value);
    partial void OnApp_IDChanged();
    partial void OnPackage_IDChanging(System.Guid value);
    partial void OnPackage_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnVersion_MajorChanging(int value);
    partial void OnVersion_MajorChanged();
    partial void OnVersion_MinorChanging(int value);
    partial void OnVersion_MinorChanged();
    partial void OnVersion_BuildChanging(int value);
    partial void OnVersion_BuildChanged();
    partial void OnVersion_RevisionChanging(int value);
    partial void OnVersion_RevisionChanged();
    partial void OnCompatibility_MajorChanging(int value);
    partial void OnCompatibility_MajorChanged();
    partial void OnCompatibility_MinorChanging(int value);
    partial void OnCompatibility_MinorChanged();
    partial void OnCompatibility_BuildChanging(int value);
    partial void OnCompatibility_BuildChanged();
    partial void OnCompatibility_RevisionChanging(int value);
    partial void OnCompatibility_RevisionChanged();
    #endregion
		
		public NAV_App_Installed_App()
		{
			this._NAV_App = default(EntityRef<NAV_App>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[App ID]", Storage="_App_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid App_ID
		{
			get
			{
				return this._App_ID;
			}
			set
			{
				if ((this._App_ID != value))
				{
					this.OnApp_IDChanging(value);
					this.SendPropertyChanging();
					this._App_ID = value;
					this.SendPropertyChanged("App_ID");
					this.OnApp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Package ID]", Storage="_Package_ID", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Package_ID
		{
			get
			{
				return this._Package_ID;
			}
			set
			{
				if ((this._Package_ID != value))
				{
					this.OnPackage_IDChanging(value);
					this.SendPropertyChanging();
					this._Package_ID = value;
					this.SendPropertyChanged("Package_ID");
					this.OnPackage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Major]", Storage="_Version_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Major
		{
			get
			{
				return this._Version_Major;
			}
			set
			{
				if ((this._Version_Major != value))
				{
					this.OnVersion_MajorChanging(value);
					this.SendPropertyChanging();
					this._Version_Major = value;
					this.SendPropertyChanged("Version_Major");
					this.OnVersion_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Minor]", Storage="_Version_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Minor
		{
			get
			{
				return this._Version_Minor;
			}
			set
			{
				if ((this._Version_Minor != value))
				{
					this.OnVersion_MinorChanging(value);
					this.SendPropertyChanging();
					this._Version_Minor = value;
					this.SendPropertyChanged("Version_Minor");
					this.OnVersion_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Build]", Storage="_Version_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Build
		{
			get
			{
				return this._Version_Build;
			}
			set
			{
				if ((this._Version_Build != value))
				{
					this.OnVersion_BuildChanging(value);
					this.SendPropertyChanging();
					this._Version_Build = value;
					this.SendPropertyChanged("Version_Build");
					this.OnVersion_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Revision]", Storage="_Version_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Revision
		{
			get
			{
				return this._Version_Revision;
			}
			set
			{
				if ((this._Version_Revision != value))
				{
					this.OnVersion_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Version_Revision = value;
					this.SendPropertyChanged("Version_Revision");
					this.OnVersion_RevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Major]", Storage="_Compatibility_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Major
		{
			get
			{
				return this._Compatibility_Major;
			}
			set
			{
				if ((this._Compatibility_Major != value))
				{
					this.OnCompatibility_MajorChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Major = value;
					this.SendPropertyChanged("Compatibility_Major");
					this.OnCompatibility_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Minor]", Storage="_Compatibility_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Minor
		{
			get
			{
				return this._Compatibility_Minor;
			}
			set
			{
				if ((this._Compatibility_Minor != value))
				{
					this.OnCompatibility_MinorChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Minor = value;
					this.SendPropertyChanged("Compatibility_Minor");
					this.OnCompatibility_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Build]", Storage="_Compatibility_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Build
		{
			get
			{
				return this._Compatibility_Build;
			}
			set
			{
				if ((this._Compatibility_Build != value))
				{
					this.OnCompatibility_BuildChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Build = value;
					this.SendPropertyChanged("Compatibility_Build");
					this.OnCompatibility_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Revision]", Storage="_Compatibility_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Revision
		{
			get
			{
				return this._Compatibility_Revision;
			}
			set
			{
				if ((this._Compatibility_Revision != value))
				{
					this.OnCompatibility_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Revision = value;
					this.SendPropertyChanged("Compatibility_Revision");
					this.OnCompatibility_RevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Installed_App", Storage="_NAV_App", ThisKey="Package_ID", OtherKey="Package_ID", IsForeignKey=true)]
		public NAV_App NAV_App
		{
			get
			{
				return this._NAV_App.Entity;
			}
			set
			{
				NAV_App previousValue = this._NAV_App.Entity;
				if (((previousValue != value) 
							|| (this._NAV_App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAV_App.Entity = null;
						previousValue.NAV_App_Installed_App.Remove(this);
					}
					this._NAV_App.Entity = value;
					if ((value != null))
					{
						value.NAV_App_Installed_App.Add(this);
						this._Package_ID = value.Package_ID;
					}
					else
					{
						this._Package_ID = default(System.Guid);
					}
					this.SendPropertyChanged("NAV_App");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
