#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Demo Database NAV (11-0)")]
	public partial class DatabaseOne : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertObject(Object instance);
    partial void UpdateObject(Object instance);
    partial void DeleteObject(Object instance);
    partial void InsertObject_Metadata(Object_Metadata instance);
    partial void UpdateObject_Metadata(Object_Metadata instance);
    partial void DeleteObject_Metadata(Object_Metadata instance);
    partial void InsertNAV_App(NAV_App instance);
    partial void UpdateNAV_App(NAV_App instance);
    partial void DeleteNAV_App(NAV_App instance);
    partial void InsertNAV_App_Capabilities(NAV_App_Capabilities instance);
    partial void UpdateNAV_App_Capabilities(NAV_App_Capabilities instance);
    partial void DeleteNAV_App_Capabilities(NAV_App_Capabilities instance);
    partial void InsertNAV_App_Dependencies(NAV_App_Dependencies instance);
    partial void UpdateNAV_App_Dependencies(NAV_App_Dependencies instance);
    partial void DeleteNAV_App_Dependencies(NAV_App_Dependencies instance);
    partial void InsertNAV_App_Data_Archive(NAV_App_Data_Archive instance);
    partial void UpdateNAV_App_Data_Archive(NAV_App_Data_Archive instance);
    partial void DeleteNAV_App_Data_Archive(NAV_App_Data_Archive instance);
    partial void InsertNAV_App_Installed_App(NAV_App_Installed_App instance);
    partial void UpdateNAV_App_Installed_App(NAV_App_Installed_App instance);
    partial void DeleteNAV_App_Installed_App(NAV_App_Installed_App instance);
    partial void InsertNAV_App_Object_Metadata(NAV_App_Object_Metadata instance);
    partial void UpdateNAV_App_Object_Metadata(NAV_App_Object_Metadata instance);
    partial void DeleteNAV_App_Object_Metadata(NAV_App_Object_Metadata instance);
    partial void InsertNAV_App_Object_Prerequisites(NAV_App_Object_Prerequisites instance);
    partial void UpdateNAV_App_Object_Prerequisites(NAV_App_Object_Prerequisites instance);
    partial void DeleteNAV_App_Object_Prerequisites(NAV_App_Object_Prerequisites instance);
    partial void InsertNAV_App_Resource(NAV_App_Resource instance);
    partial void UpdateNAV_App_Resource(NAV_App_Resource instance);
    partial void DeleteNAV_App_Resource(NAV_App_Resource instance);
    partial void InsertNAV_App_Tenant_Add_In(NAV_App_Tenant_Add_In instance);
    partial void UpdateNAV_App_Tenant_Add_In(NAV_App_Tenant_Add_In instance);
    partial void DeleteNAV_App_Tenant_Add_In(NAV_App_Tenant_Add_In instance);
    partial void InsertNAV_App_Tenant_App(NAV_App_Tenant_App instance);
    partial void UpdateNAV_App_Tenant_App(NAV_App_Tenant_App instance);
    partial void DeleteNAV_App_Tenant_App(NAV_App_Tenant_App instance);
    #endregion
		
		public DatabaseOne() : 
				base(global::Test.Properties.Settings.Default.Demo_Database_NAV__11_0_ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOne(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOne(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOne(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOne(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Object> Object
		{
			get
			{
				return this.GetTable<Object>();
			}
		}
		
		public System.Data.Linq.Table<Object_Metadata> Object_Metadata
		{
			get
			{
				return this.GetTable<Object_Metadata>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App> NAV_App
		{
			get
			{
				return this.GetTable<NAV_App>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Capabilities> NAV_App_Capabilities
		{
			get
			{
				return this.GetTable<NAV_App_Capabilities>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Dependencies> NAV_App_Dependencies
		{
			get
			{
				return this.GetTable<NAV_App_Dependencies>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Data_Archive> NAV_App_Data_Archive
		{
			get
			{
				return this.GetTable<NAV_App_Data_Archive>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Installed_App> NAV_App_Installed_App
		{
			get
			{
				return this.GetTable<NAV_App_Installed_App>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Object_Metadata> NAV_App_Object_Metadata
		{
			get
			{
				return this.GetTable<NAV_App_Object_Metadata>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Object_Prerequisites> NAV_App_Object_Prerequisites
		{
			get
			{
				return this.GetTable<NAV_App_Object_Prerequisites>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Resource> NAV_App_Resource
		{
			get
			{
				return this.GetTable<NAV_App_Resource>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Tenant_Add_In> NAV_App_Tenant_Add_In
		{
			get
			{
				return this.GetTable<NAV_App_Tenant_Add_In>();
			}
		}
		
		public System.Data.Linq.Table<NAV_App_Tenant_App> NAV_App_Tenant_App
		{
			get
			{
				return this.GetTable<NAV_App_Tenant_App>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object")]
	public partial class Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private int _Type;
		
		private string _Company_Name;
		
		private int _ID;
		
		private string _Name;
		
		private byte _Modified;
		
		private byte _Compiled;
		
		private System.Data.Linq.Binary _BLOB_Reference;
		
		private int _BLOB_Size;
		
		private int _DBM_Table_No_;
		
		private System.DateTime _Date;
		
		private System.DateTime _Time;
		
		private string _Version_List;
		
		private byte _Locked;
		
		private string _Locked_By;
		
		private EntitySet<Object_Metadata> _Object_Metadata;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedChanging(byte value);
    partial void OnModifiedChanged();
    partial void OnCompiledChanging(byte value);
    partial void OnCompiledChanged();
    partial void OnBLOB_ReferenceChanging(System.Data.Linq.Binary value);
    partial void OnBLOB_ReferenceChanged();
    partial void OnBLOB_SizeChanging(int value);
    partial void OnBLOB_SizeChanged();
    partial void OnDBM_Table_No_Changing(int value);
    partial void OnDBM_Table_No_Changed();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnVersion_ListChanging(string value);
    partial void OnVersion_ListChanged();
    partial void OnLockedChanging(byte value);
    partial void OnLockedChanged();
    partial void OnLocked_ByChanging(string value);
    partial void OnLocked_ByChanged();
    #endregion
		
		public Object()
		{
			this._Object_Metadata = new EntitySet<Object_Metadata>(new Action<Object_Metadata>(this.attach_Object_Metadata), new Action<Object_Metadata>(this.detach_Object_Metadata));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Company Name]", Storage="_Company_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compiled", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Compiled
		{
			get
			{
				return this._Compiled;
			}
			set
			{
				if ((this._Compiled != value))
				{
					this.OnCompiledChanging(value);
					this.SendPropertyChanging();
					this._Compiled = value;
					this.SendPropertyChanged("Compiled");
					this.OnCompiledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BLOB Reference]", Storage="_BLOB_Reference", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BLOB_Reference
		{
			get
			{
				return this._BLOB_Reference;
			}
			set
			{
				if ((this._BLOB_Reference != value))
				{
					this.OnBLOB_ReferenceChanging(value);
					this.SendPropertyChanging();
					this._BLOB_Reference = value;
					this.SendPropertyChanged("BLOB_Reference");
					this.OnBLOB_ReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BLOB Size]", Storage="_BLOB_Size", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int BLOB_Size
		{
			get
			{
				return this._BLOB_Size;
			}
			set
			{
				if ((this._BLOB_Size != value))
				{
					this.OnBLOB_SizeChanging(value);
					this.SendPropertyChanging();
					this._BLOB_Size = value;
					this.SendPropertyChanged("BLOB_Size");
					this.OnBLOB_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[DBM Table No_]", Storage="_DBM_Table_No_", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DBM_Table_No_
		{
			get
			{
				return this._DBM_Table_No_;
			}
			set
			{
				if ((this._DBM_Table_No_ != value))
				{
					this.OnDBM_Table_No_Changing(value);
					this.SendPropertyChanging();
					this._DBM_Table_No_ = value;
					this.SendPropertyChanged("DBM_Table_No_");
					this.OnDBM_Table_No_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version List]", Storage="_Version_List", DbType="VarChar(248) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Version_List
		{
			get
			{
				return this._Version_List;
			}
			set
			{
				if ((this._Version_List != value))
				{
					this.OnVersion_ListChanging(value);
					this.SendPropertyChanging();
					this._Version_List = value;
					this.SendPropertyChanged("Version_List");
					this.OnVersion_ListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Locked By]", Storage="_Locked_By", DbType="VarChar(132) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Locked_By
		{
			get
			{
				return this._Locked_By;
			}
			set
			{
				if ((this._Locked_By != value))
				{
					this.OnLocked_ByChanging(value);
					this.SendPropertyChanging();
					this._Locked_By = value;
					this.SendPropertyChanged("Locked_By");
					this.OnLocked_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Metadata", Storage="_Object_Metadata", ThisKey="Type,ID", OtherKey="Object_Type,Object_ID")]
		public EntitySet<Object_Metadata> Object_Metadata
		{
			get
			{
				return this._Object_Metadata;
			}
			set
			{
				this._Object_Metadata.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Object_Metadata(Object_Metadata entity)
		{
			this.SendPropertyChanging();
			entity.Object = this;
		}
		
		private void detach_Object_Metadata(Object_Metadata entity)
		{
			this.SendPropertyChanging();
			entity.Object = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Object Metadata]")]
	public partial class Object_Metadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private int _Object_Type;
		
		private int _Object_ID;
		
		private System.Data.Linq.Binary _Metadata;
		
		private System.Data.Linq.Binary _User_Code;
		
		private System.Data.Linq.Binary _User_AL_Code;
		
		private int _Metadata_Version;
		
		private string _Hash;
		
		private string _Object_Subtype;
		
		private byte _Has_Subscribers;
		
		private System.Data.Linq.Binary _Symbol_Reference;
		
		private EntityRef<Object> _Object;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnObject_TypeChanging(int value);
    partial void OnObject_TypeChanged();
    partial void OnObject_IDChanging(int value);
    partial void OnObject_IDChanged();
    partial void OnMetadataChanging(System.Data.Linq.Binary value);
    partial void OnMetadataChanged();
    partial void OnUser_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_CodeChanged();
    partial void OnUser_AL_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_AL_CodeChanged();
    partial void OnMetadata_VersionChanging(int value);
    partial void OnMetadata_VersionChanged();
    partial void OnHashChanging(string value);
    partial void OnHashChanged();
    partial void OnObject_SubtypeChanging(string value);
    partial void OnObject_SubtypeChanged();
    partial void OnHas_SubscribersChanging(byte value);
    partial void OnHas_SubscribersChanged();
    partial void OnSymbol_ReferenceChanging(System.Data.Linq.Binary value);
    partial void OnSymbol_ReferenceChanged();
    #endregion
		
		public Object_Metadata()
		{
			this._Object = default(EntityRef<Object>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Type]", Storage="_Object_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_Type
		{
			get
			{
				return this._Object_Type;
			}
			set
			{
				if ((this._Object_Type != value))
				{
					this.OnObject_TypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Type = value;
					this.SendPropertyChanged("Object_Type");
					this.OnObject_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object ID]", Storage="_Object_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_ID
		{
			get
			{
				return this._Object_ID;
			}
			set
			{
				if ((this._Object_ID != value))
				{
					this.OnObject_IDChanging(value);
					this.SendPropertyChanging();
					this._Object_ID = value;
					this.SendPropertyChanged("Object_ID");
					this.OnObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metadata", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Metadata
		{
			get
			{
				return this._Metadata;
			}
			set
			{
				if ((this._Metadata != value))
				{
					this.OnMetadataChanging(value);
					this.SendPropertyChanging();
					this._Metadata = value;
					this.SendPropertyChanged("Metadata");
					this.OnMetadataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User Code]", Storage="_User_Code", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_Code
		{
			get
			{
				return this._User_Code;
			}
			set
			{
				if ((this._User_Code != value))
				{
					this.OnUser_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_Code = value;
					this.SendPropertyChanged("User_Code");
					this.OnUser_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User AL Code]", Storage="_User_AL_Code", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_AL_Code
		{
			get
			{
				return this._User_AL_Code;
			}
			set
			{
				if ((this._User_AL_Code != value))
				{
					this.OnUser_AL_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_AL_Code = value;
					this.SendPropertyChanged("User_AL_Code");
					this.OnUser_AL_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Metadata Version]", Storage="_Metadata_Version", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Metadata_Version
		{
			get
			{
				return this._Metadata_Version;
			}
			set
			{
				if ((this._Metadata_Version != value))
				{
					this.OnMetadata_VersionChanging(value);
					this.SendPropertyChanging();
					this._Metadata_Version = value;
					this.SendPropertyChanged("Metadata_Version");
					this.OnMetadata_VersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="NVarChar(32) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Subtype]", Storage="_Object_Subtype", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Object_Subtype
		{
			get
			{
				return this._Object_Subtype;
			}
			set
			{
				if ((this._Object_Subtype != value))
				{
					this.OnObject_SubtypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Subtype = value;
					this.SendPropertyChanged("Object_Subtype");
					this.OnObject_SubtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Has Subscribers]", Storage="_Has_Subscribers", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Has_Subscribers
		{
			get
			{
				return this._Has_Subscribers;
			}
			set
			{
				if ((this._Has_Subscribers != value))
				{
					this.OnHas_SubscribersChanging(value);
					this.SendPropertyChanging();
					this._Has_Subscribers = value;
					this.SendPropertyChanged("Has_Subscribers");
					this.OnHas_SubscribersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Symbol Reference]", Storage="_Symbol_Reference", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Symbol_Reference
		{
			get
			{
				return this._Symbol_Reference;
			}
			set
			{
				if ((this._Symbol_Reference != value))
				{
					this.OnSymbol_ReferenceChanging(value);
					this.SendPropertyChanging();
					this._Symbol_Reference = value;
					this.SendPropertyChanged("Symbol_Reference");
					this.OnSymbol_ReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Object_Object_Metadata", Storage="_Object", ThisKey="Object_Type,Object_ID", OtherKey="Type,ID", IsForeignKey=true)]
		public Object Object
		{
			get
			{
				return this._Object.Entity;
			}
			set
			{
				Object previousValue = this._Object.Entity;
				if (((previousValue != value) 
							|| (this._Object.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Object.Entity = null;
						previousValue.Object_Metadata.Remove(this);
					}
					this._Object.Entity = value;
					if ((value != null))
					{
						value.Object_Metadata.Add(this);
						this._Object_Type = value.Type;
						this._Object_ID = value.ID;
					}
					else
					{
						this._Object_Type = default(int);
						this._Object_ID = default(int);
					}
					this.SendPropertyChanged("Object");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App]")]
	public partial class NAV_App : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _Package_ID;
		
		private System.Guid _ID;
		
		private string _Name;
		
		private string _Publisher;
		
		private int _Version_Major;
		
		private int _Version_Minor;
		
		private int _Version_Build;
		
		private int _Version_Revision;
		
		private int _Compatibility_Major;
		
		private int _Compatibility_Minor;
		
		private int _Compatibility_Build;
		
		private int _Compatibility_Revision;
		
		private string _Brief;
		
		private System.Data.Linq.Binary _Description;
		
		private string _Privacy_Statement;
		
		private string _EULA;
		
		private string _Url;
		
		private string _Help;
		
		private System.Guid _Logo;
		
		private System.Guid _Screenshots;
		
		private System.Data.Linq.Binary _Blob;
		
		private int _Package_Type;
		
		private System.Data.Linq.Binary _Symbols;
		
		private string _Content_Hash;
		
		private string _Tenant_ID;
		
		private byte _Show_My_Code;
		
		private EntitySet<NAV_App_Object_Metadata> _NAV_App_Object_Metadata;
		
		private EntitySet<NAV_App_Data_Archive> _NAV_App_Data_Archive;
		
		private EntitySet<NAV_App_Resource> _NAV_App_Resource;
		
		private EntitySet<NAV_App_Tenant_App> _NAV_App_Tenant_App;
		
		private EntitySet<NAV_App_Object_Prerequisites> _NAV_App_Object_Prerequisites;
		
		private EntitySet<NAV_App_Installed_App> _NAV_App_Installed_App;
		
		private EntitySet<NAV_App_Tenant_Add_In> _NAV_App_Tenant_Add_In;
		
		private EntitySet<NAV_App_Capabilities> _NAV_App_Capabilities;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnPackage_IDChanging(System.Guid value);
    partial void OnPackage_IDChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnVersion_MajorChanging(int value);
    partial void OnVersion_MajorChanged();
    partial void OnVersion_MinorChanging(int value);
    partial void OnVersion_MinorChanged();
    partial void OnVersion_BuildChanging(int value);
    partial void OnVersion_BuildChanged();
    partial void OnVersion_RevisionChanging(int value);
    partial void OnVersion_RevisionChanged();
    partial void OnCompatibility_MajorChanging(int value);
    partial void OnCompatibility_MajorChanged();
    partial void OnCompatibility_MinorChanging(int value);
    partial void OnCompatibility_MinorChanged();
    partial void OnCompatibility_BuildChanging(int value);
    partial void OnCompatibility_BuildChanged();
    partial void OnCompatibility_RevisionChanging(int value);
    partial void OnCompatibility_RevisionChanged();
    partial void OnBriefChanging(string value);
    partial void OnBriefChanged();
    partial void OnDescriptionChanging(System.Data.Linq.Binary value);
    partial void OnDescriptionChanged();
    partial void OnPrivacy_StatementChanging(string value);
    partial void OnPrivacy_StatementChanged();
    partial void OnEULAChanging(string value);
    partial void OnEULAChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnHelpChanging(string value);
    partial void OnHelpChanged();
    partial void OnLogoChanging(System.Guid value);
    partial void OnLogoChanged();
    partial void OnScreenshotsChanging(System.Guid value);
    partial void OnScreenshotsChanged();
    partial void OnBlobChanging(System.Data.Linq.Binary value);
    partial void OnBlobChanged();
    partial void OnPackage_TypeChanging(int value);
    partial void OnPackage_TypeChanged();
    partial void OnSymbolsChanging(System.Data.Linq.Binary value);
    partial void OnSymbolsChanged();
    partial void OnContent_HashChanging(string value);
    partial void OnContent_HashChanged();
    partial void OnTenant_IDChanging(string value);
    partial void OnTenant_IDChanged();
    partial void OnShow_My_CodeChanging(byte value);
    partial void OnShow_My_CodeChanged();
    #endregion
		
		public NAV_App()
		{
			this._NAV_App_Object_Metadata = new EntitySet<NAV_App_Object_Metadata>(new Action<NAV_App_Object_Metadata>(this.attach_NAV_App_Object_Metadata), new Action<NAV_App_Object_Metadata>(this.detach_NAV_App_Object_Metadata));
			this._NAV_App_Data_Archive = new EntitySet<NAV_App_Data_Archive>(new Action<NAV_App_Data_Archive>(this.attach_NAV_App_Data_Archive), new Action<NAV_App_Data_Archive>(this.detach_NAV_App_Data_Archive));
			this._NAV_App_Resource = new EntitySet<NAV_App_Resource>(new Action<NAV_App_Resource>(this.attach_NAV_App_Resource), new Action<NAV_App_Resource>(this.detach_NAV_App_Resource));
			this._NAV_App_Tenant_App = new EntitySet<NAV_App_Tenant_App>(new Action<NAV_App_Tenant_App>(this.attach_NAV_App_Tenant_App), new Action<NAV_App_Tenant_App>(this.detach_NAV_App_Tenant_App));
			this._NAV_App_Object_Prerequisites = new EntitySet<NAV_App_Object_Prerequisites>(new Action<NAV_App_Object_Prerequisites>(this.attach_NAV_App_Object_Prerequisites), new Action<NAV_App_Object_Prerequisites>(this.detach_NAV_App_Object_Prerequisites));
			this._NAV_App_Installed_App = new EntitySet<NAV_App_Installed_App>(new Action<NAV_App_Installed_App>(this.attach_NAV_App_Installed_App), new Action<NAV_App_Installed_App>(this.detach_NAV_App_Installed_App));
			this._NAV_App_Tenant_Add_In = new EntitySet<NAV_App_Tenant_Add_In>(new Action<NAV_App_Tenant_Add_In>(this.attach_NAV_App_Tenant_Add_In), new Action<NAV_App_Tenant_Add_In>(this.detach_NAV_App_Tenant_Add_In));
			this._NAV_App_Capabilities = new EntitySet<NAV_App_Capabilities>(new Action<NAV_App_Capabilities>(this.attach_NAV_App_Capabilities), new Action<NAV_App_Capabilities>(this.detach_NAV_App_Capabilities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Package ID]", Storage="_Package_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Package_ID
		{
			get
			{
				return this._Package_ID;
			}
			set
			{
				if ((this._Package_ID != value))
				{
					this.OnPackage_IDChanging(value);
					this.SendPropertyChanging();
					this._Package_ID = value;
					this.SendPropertyChanged("Package_ID");
					this.OnPackage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Major]", Storage="_Version_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Major
		{
			get
			{
				return this._Version_Major;
			}
			set
			{
				if ((this._Version_Major != value))
				{
					this.OnVersion_MajorChanging(value);
					this.SendPropertyChanging();
					this._Version_Major = value;
					this.SendPropertyChanged("Version_Major");
					this.OnVersion_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Minor]", Storage="_Version_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Minor
		{
			get
			{
				return this._Version_Minor;
			}
			set
			{
				if ((this._Version_Minor != value))
				{
					this.OnVersion_MinorChanging(value);
					this.SendPropertyChanging();
					this._Version_Minor = value;
					this.SendPropertyChanged("Version_Minor");
					this.OnVersion_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Build]", Storage="_Version_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Build
		{
			get
			{
				return this._Version_Build;
			}
			set
			{
				if ((this._Version_Build != value))
				{
					this.OnVersion_BuildChanging(value);
					this.SendPropertyChanging();
					this._Version_Build = value;
					this.SendPropertyChanged("Version_Build");
					this.OnVersion_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Revision]", Storage="_Version_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Revision
		{
			get
			{
				return this._Version_Revision;
			}
			set
			{
				if ((this._Version_Revision != value))
				{
					this.OnVersion_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Version_Revision = value;
					this.SendPropertyChanged("Version_Revision");
					this.OnVersion_RevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Major]", Storage="_Compatibility_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Major
		{
			get
			{
				return this._Compatibility_Major;
			}
			set
			{
				if ((this._Compatibility_Major != value))
				{
					this.OnCompatibility_MajorChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Major = value;
					this.SendPropertyChanged("Compatibility_Major");
					this.OnCompatibility_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Minor]", Storage="_Compatibility_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Minor
		{
			get
			{
				return this._Compatibility_Minor;
			}
			set
			{
				if ((this._Compatibility_Minor != value))
				{
					this.OnCompatibility_MinorChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Minor = value;
					this.SendPropertyChanged("Compatibility_Minor");
					this.OnCompatibility_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Build]", Storage="_Compatibility_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Build
		{
			get
			{
				return this._Compatibility_Build;
			}
			set
			{
				if ((this._Compatibility_Build != value))
				{
					this.OnCompatibility_BuildChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Build = value;
					this.SendPropertyChanged("Compatibility_Build");
					this.OnCompatibility_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Revision]", Storage="_Compatibility_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Revision
		{
			get
			{
				return this._Compatibility_Revision;
			}
			set
			{
				if ((this._Compatibility_Revision != value))
				{
					this.OnCompatibility_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Revision = value;
					this.SendPropertyChanged("Compatibility_Revision");
					this.OnCompatibility_RevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brief", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Brief
		{
			get
			{
				return this._Brief;
			}
			set
			{
				if ((this._Brief != value))
				{
					this.OnBriefChanging(value);
					this.SendPropertyChanging();
					this._Brief = value;
					this.SendPropertyChanged("Brief");
					this.OnBriefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Privacy Statement]", Storage="_Privacy_Statement", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Privacy_Statement
		{
			get
			{
				return this._Privacy_Statement;
			}
			set
			{
				if ((this._Privacy_Statement != value))
				{
					this.OnPrivacy_StatementChanging(value);
					this.SendPropertyChanging();
					this._Privacy_Statement = value;
					this.SendPropertyChanged("Privacy_Statement");
					this.OnPrivacy_StatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EULA", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EULA
		{
			get
			{
				return this._EULA;
			}
			set
			{
				if ((this._EULA != value))
				{
					this.OnEULAChanging(value);
					this.SendPropertyChanging();
					this._EULA = value;
					this.SendPropertyChanged("EULA");
					this.OnEULAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Help", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Help
		{
			get
			{
				return this._Help;
			}
			set
			{
				if ((this._Help != value))
				{
					this.OnHelpChanging(value);
					this.SendPropertyChanging();
					this._Help = value;
					this.SendPropertyChanged("Help");
					this.OnHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Screenshots", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Screenshots
		{
			get
			{
				return this._Screenshots;
			}
			set
			{
				if ((this._Screenshots != value))
				{
					this.OnScreenshotsChanging(value);
					this.SendPropertyChanging();
					this._Screenshots = value;
					this.SendPropertyChanged("Screenshots");
					this.OnScreenshotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blob", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Blob
		{
			get
			{
				return this._Blob;
			}
			set
			{
				if ((this._Blob != value))
				{
					this.OnBlobChanging(value);
					this.SendPropertyChanging();
					this._Blob = value;
					this.SendPropertyChanged("Blob");
					this.OnBlobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Package Type]", Storage="_Package_Type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Package_Type
		{
			get
			{
				return this._Package_Type;
			}
			set
			{
				if ((this._Package_Type != value))
				{
					this.OnPackage_TypeChanging(value);
					this.SendPropertyChanging();
					this._Package_Type = value;
					this.SendPropertyChanged("Package_Type");
					this.OnPackage_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbols", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Symbols
		{
			get
			{
				return this._Symbols;
			}
			set
			{
				if ((this._Symbols != value))
				{
					this.OnSymbolsChanging(value);
					this.SendPropertyChanging();
					this._Symbols = value;
					this.SendPropertyChanged("Symbols");
					this.OnSymbolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Content Hash]", Storage="_Content_Hash", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content_Hash
		{
			get
			{
				return this._Content_Hash;
			}
			set
			{
				if ((this._Content_Hash != value))
				{
					this.OnContent_HashChanging(value);
					this.SendPropertyChanging();
					this._Content_Hash = value;
					this.SendPropertyChanged("Content_Hash");
					this.OnContent_HashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Tenant ID]", Storage="_Tenant_ID", DbType="NVarChar(128) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Tenant_ID
		{
			get
			{
				return this._Tenant_ID;
			}
			set
			{
				if ((this._Tenant_ID != value))
				{
					this.OnTenant_IDChanging(value);
					this.SendPropertyChanging();
					this._Tenant_ID = value;
					this.SendPropertyChanged("Tenant_ID");
					this.OnTenant_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Show My Code]", Storage="_Show_My_Code", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Show_My_Code
		{
			get
			{
				return this._Show_My_Code;
			}
			set
			{
				if ((this._Show_My_Code != value))
				{
					this.OnShow_My_CodeChanging(value);
					this.SendPropertyChanging();
					this._Show_My_Code = value;
					this.SendPropertyChanged("Show_My_Code");
					this.OnShow_My_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Object_Metadata", Storage="_NAV_App_Object_Metadata", ThisKey="Package_ID", OtherKey="App_Package_ID")]
		public EntitySet<NAV_App_Object_Metadata> NAV_App_Object_Metadata
		{
			get
			{
				return this._NAV_App_Object_Metadata;
			}
			set
			{
				this._NAV_App_Object_Metadata.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Data_Archive", Storage="_NAV_App_Data_Archive", ThisKey="ID", OtherKey="App_ID")]
		public EntitySet<NAV_App_Data_Archive> NAV_App_Data_Archive
		{
			get
			{
				return this._NAV_App_Data_Archive;
			}
			set
			{
				this._NAV_App_Data_Archive.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Resource", Storage="_NAV_App_Resource", ThisKey="Package_ID", OtherKey="Package_ID")]
		public EntitySet<NAV_App_Resource> NAV_App_Resource
		{
			get
			{
				return this._NAV_App_Resource;
			}
			set
			{
				this._NAV_App_Resource.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Tenant_App", Storage="_NAV_App_Tenant_App", ThisKey="Package_ID,Tenant_ID", OtherKey="App_Package_ID,Tenant_ID")]
		public EntitySet<NAV_App_Tenant_App> NAV_App_Tenant_App
		{
			get
			{
				return this._NAV_App_Tenant_App;
			}
			set
			{
				this._NAV_App_Tenant_App.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Object_Prerequisites", Storage="_NAV_App_Object_Prerequisites", ThisKey="Package_ID", OtherKey="Package_ID")]
		public EntitySet<NAV_App_Object_Prerequisites> NAV_App_Object_Prerequisites
		{
			get
			{
				return this._NAV_App_Object_Prerequisites;
			}
			set
			{
				this._NAV_App_Object_Prerequisites.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Installed_App", Storage="_NAV_App_Installed_App", ThisKey="ID,Package_ID", OtherKey="App_ID,Package_ID")]
		public EntitySet<NAV_App_Installed_App> NAV_App_Installed_App
		{
			get
			{
				return this._NAV_App_Installed_App;
			}
			set
			{
				this._NAV_App_Installed_App.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Tenant_Add_In", Storage="_NAV_App_Tenant_Add_In", ThisKey="ID", OtherKey="App_ID")]
		public EntitySet<NAV_App_Tenant_Add_In> NAV_App_Tenant_Add_In
		{
			get
			{
				return this._NAV_App_Tenant_Add_In;
			}
			set
			{
				this._NAV_App_Tenant_Add_In.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Capabilities", Storage="_NAV_App_Capabilities", ThisKey="Package_ID", OtherKey="Package_ID")]
		public EntitySet<NAV_App_Capabilities> NAV_App_Capabilities
		{
			get
			{
				return this._NAV_App_Capabilities;
			}
			set
			{
				this._NAV_App_Capabilities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NAV_App_Object_Metadata(NAV_App_Object_Metadata entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = this;
		}
		
		private void detach_NAV_App_Object_Metadata(NAV_App_Object_Metadata entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = null;
		}
		
		private void attach_NAV_App_Data_Archive(NAV_App_Data_Archive entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = this;
		}
		
		private void detach_NAV_App_Data_Archive(NAV_App_Data_Archive entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = null;
		}
		
		private void attach_NAV_App_Resource(NAV_App_Resource entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = this;
		}
		
		private void detach_NAV_App_Resource(NAV_App_Resource entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = null;
		}
		
		private void attach_NAV_App_Tenant_App(NAV_App_Tenant_App entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = this;
		}
		
		private void detach_NAV_App_Tenant_App(NAV_App_Tenant_App entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = null;
		}
		
		private void attach_NAV_App_Object_Prerequisites(NAV_App_Object_Prerequisites entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = this;
		}
		
		private void detach_NAV_App_Object_Prerequisites(NAV_App_Object_Prerequisites entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = null;
		}
		
		private void attach_NAV_App_Installed_App(NAV_App_Installed_App entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = this;
		}
		
		private void detach_NAV_App_Installed_App(NAV_App_Installed_App entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = null;
		}
		
		private void attach_NAV_App_Tenant_Add_In(NAV_App_Tenant_Add_In entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = this;
		}
		
		private void detach_NAV_App_Tenant_Add_In(NAV_App_Tenant_Add_In entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = null;
		}
		
		private void attach_NAV_App_Capabilities(NAV_App_Capabilities entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = this;
		}
		
		private void detach_NAV_App_Capabilities(NAV_App_Capabilities entity)
		{
			this.SendPropertyChanging();
			entity.NAV_App = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Capabilities]")]
	public partial class NAV_App_Capabilities : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _Package_ID;
		
		private int _Capability_ID;
		
		private EntityRef<NAV_App> _NAV_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnPackage_IDChanging(System.Guid value);
    partial void OnPackage_IDChanged();
    partial void OnCapability_IDChanging(int value);
    partial void OnCapability_IDChanged();
    #endregion
		
		public NAV_App_Capabilities()
		{
			this._NAV_App = default(EntityRef<NAV_App>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Package ID]", Storage="_Package_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Package_ID
		{
			get
			{
				return this._Package_ID;
			}
			set
			{
				if ((this._Package_ID != value))
				{
					this.OnPackage_IDChanging(value);
					this.SendPropertyChanging();
					this._Package_ID = value;
					this.SendPropertyChanged("Package_ID");
					this.OnPackage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Capability ID]", Storage="_Capability_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Capability_ID
		{
			get
			{
				return this._Capability_ID;
			}
			set
			{
				if ((this._Capability_ID != value))
				{
					this.OnCapability_IDChanging(value);
					this.SendPropertyChanging();
					this._Capability_ID = value;
					this.SendPropertyChanged("Capability_ID");
					this.OnCapability_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Capabilities", Storage="_NAV_App", ThisKey="Package_ID", OtherKey="Package_ID", IsForeignKey=true)]
		public NAV_App NAV_App
		{
			get
			{
				return this._NAV_App.Entity;
			}
			set
			{
				NAV_App previousValue = this._NAV_App.Entity;
				if (((previousValue != value) 
							|| (this._NAV_App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAV_App.Entity = null;
						previousValue.NAV_App_Capabilities.Remove(this);
					}
					this._NAV_App.Entity = value;
					if ((value != null))
					{
						value.NAV_App_Capabilities.Add(this);
						this._Package_ID = value.Package_ID;
					}
					else
					{
						this._Package_ID = default(System.Guid);
					}
					this.SendPropertyChanged("NAV_App");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Dependencies]")]
	public partial class NAV_App_Dependencies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _Package_ID;
		
		private System.Guid _ID;
		
		private string _Name;
		
		private string _Publisher;
		
		private int _Version_Major;
		
		private int _Version_Minor;
		
		private int _Version_Build;
		
		private int _Version_Revision;
		
		private int _Compatibility_Major;
		
		private int _Compatibility_Minor;
		
		private int _Compatibility_Build;
		
		private int _Compatibility_Revision;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnPackage_IDChanging(System.Guid value);
    partial void OnPackage_IDChanged();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnVersion_MajorChanging(int value);
    partial void OnVersion_MajorChanged();
    partial void OnVersion_MinorChanging(int value);
    partial void OnVersion_MinorChanged();
    partial void OnVersion_BuildChanging(int value);
    partial void OnVersion_BuildChanged();
    partial void OnVersion_RevisionChanging(int value);
    partial void OnVersion_RevisionChanged();
    partial void OnCompatibility_MajorChanging(int value);
    partial void OnCompatibility_MajorChanged();
    partial void OnCompatibility_MinorChanging(int value);
    partial void OnCompatibility_MinorChanged();
    partial void OnCompatibility_BuildChanging(int value);
    partial void OnCompatibility_BuildChanged();
    partial void OnCompatibility_RevisionChanging(int value);
    partial void OnCompatibility_RevisionChanged();
    #endregion
		
		public NAV_App_Dependencies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Package ID]", Storage="_Package_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Package_ID
		{
			get
			{
				return this._Package_ID;
			}
			set
			{
				if ((this._Package_ID != value))
				{
					this.OnPackage_IDChanging(value);
					this.SendPropertyChanging();
					this._Package_ID = value;
					this.SendPropertyChanged("Package_ID");
					this.OnPackage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Major]", Storage="_Version_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Major
		{
			get
			{
				return this._Version_Major;
			}
			set
			{
				if ((this._Version_Major != value))
				{
					this.OnVersion_MajorChanging(value);
					this.SendPropertyChanging();
					this._Version_Major = value;
					this.SendPropertyChanged("Version_Major");
					this.OnVersion_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Minor]", Storage="_Version_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Minor
		{
			get
			{
				return this._Version_Minor;
			}
			set
			{
				if ((this._Version_Minor != value))
				{
					this.OnVersion_MinorChanging(value);
					this.SendPropertyChanging();
					this._Version_Minor = value;
					this.SendPropertyChanged("Version_Minor");
					this.OnVersion_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Build]", Storage="_Version_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Build
		{
			get
			{
				return this._Version_Build;
			}
			set
			{
				if ((this._Version_Build != value))
				{
					this.OnVersion_BuildChanging(value);
					this.SendPropertyChanging();
					this._Version_Build = value;
					this.SendPropertyChanged("Version_Build");
					this.OnVersion_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Revision]", Storage="_Version_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Revision
		{
			get
			{
				return this._Version_Revision;
			}
			set
			{
				if ((this._Version_Revision != value))
				{
					this.OnVersion_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Version_Revision = value;
					this.SendPropertyChanged("Version_Revision");
					this.OnVersion_RevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Major]", Storage="_Compatibility_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Major
		{
			get
			{
				return this._Compatibility_Major;
			}
			set
			{
				if ((this._Compatibility_Major != value))
				{
					this.OnCompatibility_MajorChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Major = value;
					this.SendPropertyChanged("Compatibility_Major");
					this.OnCompatibility_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Minor]", Storage="_Compatibility_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Minor
		{
			get
			{
				return this._Compatibility_Minor;
			}
			set
			{
				if ((this._Compatibility_Minor != value))
				{
					this.OnCompatibility_MinorChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Minor = value;
					this.SendPropertyChanged("Compatibility_Minor");
					this.OnCompatibility_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Build]", Storage="_Compatibility_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Build
		{
			get
			{
				return this._Compatibility_Build;
			}
			set
			{
				if ((this._Compatibility_Build != value))
				{
					this.OnCompatibility_BuildChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Build = value;
					this.SendPropertyChanged("Compatibility_Build");
					this.OnCompatibility_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Revision]", Storage="_Compatibility_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Revision
		{
			get
			{
				return this._Compatibility_Revision;
			}
			set
			{
				if ((this._Compatibility_Revision != value))
				{
					this.OnCompatibility_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Revision = value;
					this.SendPropertyChanged("Compatibility_Revision");
					this.OnCompatibility_RevisionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Data Archive]")]
	public partial class NAV_App_Data_Archive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _App_ID;
		
		private int _Table_ID;
		
		private string _Company_Name;
		
		private int _Version_Major;
		
		private int _Version_Minor;
		
		private int _Version_Build;
		
		private int _Version_Revision;
		
		private string _Archive_Table_Name;
		
		private System.Data.Linq.Binary _Metadata;
		
		private int _Table_Blob_Version;
		
		private EntityRef<NAV_App> _NAV_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnApp_IDChanging(System.Guid value);
    partial void OnApp_IDChanged();
    partial void OnTable_IDChanging(int value);
    partial void OnTable_IDChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnVersion_MajorChanging(int value);
    partial void OnVersion_MajorChanged();
    partial void OnVersion_MinorChanging(int value);
    partial void OnVersion_MinorChanged();
    partial void OnVersion_BuildChanging(int value);
    partial void OnVersion_BuildChanged();
    partial void OnVersion_RevisionChanging(int value);
    partial void OnVersion_RevisionChanged();
    partial void OnArchive_Table_NameChanging(string value);
    partial void OnArchive_Table_NameChanged();
    partial void OnMetadataChanging(System.Data.Linq.Binary value);
    partial void OnMetadataChanged();
    partial void OnTable_Blob_VersionChanging(int value);
    partial void OnTable_Blob_VersionChanged();
    #endregion
		
		public NAV_App_Data_Archive()
		{
			this._NAV_App = default(EntityRef<NAV_App>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[App ID]", Storage="_App_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid App_ID
		{
			get
			{
				return this._App_ID;
			}
			set
			{
				if ((this._App_ID != value))
				{
					this.OnApp_IDChanging(value);
					this.SendPropertyChanging();
					this._App_ID = value;
					this.SendPropertyChanged("App_ID");
					this.OnApp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Table ID]", Storage="_Table_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Table_ID
		{
			get
			{
				return this._Table_ID;
			}
			set
			{
				if ((this._Table_ID != value))
				{
					this.OnTable_IDChanging(value);
					this.SendPropertyChanging();
					this._Table_ID = value;
					this.SendPropertyChanged("Table_ID");
					this.OnTable_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Company Name]", Storage="_Company_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Major]", Storage="_Version_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Major
		{
			get
			{
				return this._Version_Major;
			}
			set
			{
				if ((this._Version_Major != value))
				{
					this.OnVersion_MajorChanging(value);
					this.SendPropertyChanging();
					this._Version_Major = value;
					this.SendPropertyChanged("Version_Major");
					this.OnVersion_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Minor]", Storage="_Version_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Minor
		{
			get
			{
				return this._Version_Minor;
			}
			set
			{
				if ((this._Version_Minor != value))
				{
					this.OnVersion_MinorChanging(value);
					this.SendPropertyChanging();
					this._Version_Minor = value;
					this.SendPropertyChanged("Version_Minor");
					this.OnVersion_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Build]", Storage="_Version_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Build
		{
			get
			{
				return this._Version_Build;
			}
			set
			{
				if ((this._Version_Build != value))
				{
					this.OnVersion_BuildChanging(value);
					this.SendPropertyChanging();
					this._Version_Build = value;
					this.SendPropertyChanged("Version_Build");
					this.OnVersion_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Revision]", Storage="_Version_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Revision
		{
			get
			{
				return this._Version_Revision;
			}
			set
			{
				if ((this._Version_Revision != value))
				{
					this.OnVersion_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Version_Revision = value;
					this.SendPropertyChanged("Version_Revision");
					this.OnVersion_RevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Archive Table Name]", Storage="_Archive_Table_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Archive_Table_Name
		{
			get
			{
				return this._Archive_Table_Name;
			}
			set
			{
				if ((this._Archive_Table_Name != value))
				{
					this.OnArchive_Table_NameChanging(value);
					this.SendPropertyChanging();
					this._Archive_Table_Name = value;
					this.SendPropertyChanged("Archive_Table_Name");
					this.OnArchive_Table_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metadata", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Metadata
		{
			get
			{
				return this._Metadata;
			}
			set
			{
				if ((this._Metadata != value))
				{
					this.OnMetadataChanging(value);
					this.SendPropertyChanging();
					this._Metadata = value;
					this.SendPropertyChanged("Metadata");
					this.OnMetadataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Table Blob Version]", Storage="_Table_Blob_Version", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Table_Blob_Version
		{
			get
			{
				return this._Table_Blob_Version;
			}
			set
			{
				if ((this._Table_Blob_Version != value))
				{
					this.OnTable_Blob_VersionChanging(value);
					this.SendPropertyChanging();
					this._Table_Blob_Version = value;
					this.SendPropertyChanged("Table_Blob_Version");
					this.OnTable_Blob_VersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Data_Archive", Storage="_NAV_App", ThisKey="App_ID", OtherKey="ID", IsForeignKey=true)]
		public NAV_App NAV_App
		{
			get
			{
				return this._NAV_App.Entity;
			}
			set
			{
				NAV_App previousValue = this._NAV_App.Entity;
				if (((previousValue != value) 
							|| (this._NAV_App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAV_App.Entity = null;
						previousValue.NAV_App_Data_Archive.Remove(this);
					}
					this._NAV_App.Entity = value;
					if ((value != null))
					{
						value.NAV_App_Data_Archive.Add(this);
						this._App_ID = value.ID;
					}
					else
					{
						this._App_ID = default(System.Guid);
					}
					this.SendPropertyChanged("NAV_App");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Installed App]")]
	public partial class NAV_App_Installed_App : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _App_ID;
		
		private System.Guid _Package_ID;
		
		private string _Name;
		
		private string _Publisher;
		
		private int _Version_Major;
		
		private int _Version_Minor;
		
		private int _Version_Build;
		
		private int _Version_Revision;
		
		private int _Compatibility_Major;
		
		private int _Compatibility_Minor;
		
		private int _Compatibility_Build;
		
		private int _Compatibility_Revision;
		
		private string _Content_Hash;
		
		private int _Hash_Algorithm;
		
		private int _Extension_Type;
		
		private EntityRef<NAV_App> _NAV_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnApp_IDChanging(System.Guid value);
    partial void OnApp_IDChanged();
    partial void OnPackage_IDChanging(System.Guid value);
    partial void OnPackage_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnVersion_MajorChanging(int value);
    partial void OnVersion_MajorChanged();
    partial void OnVersion_MinorChanging(int value);
    partial void OnVersion_MinorChanged();
    partial void OnVersion_BuildChanging(int value);
    partial void OnVersion_BuildChanged();
    partial void OnVersion_RevisionChanging(int value);
    partial void OnVersion_RevisionChanged();
    partial void OnCompatibility_MajorChanging(int value);
    partial void OnCompatibility_MajorChanged();
    partial void OnCompatibility_MinorChanging(int value);
    partial void OnCompatibility_MinorChanged();
    partial void OnCompatibility_BuildChanging(int value);
    partial void OnCompatibility_BuildChanged();
    partial void OnCompatibility_RevisionChanging(int value);
    partial void OnCompatibility_RevisionChanged();
    partial void OnContent_HashChanging(string value);
    partial void OnContent_HashChanged();
    partial void OnHash_AlgorithmChanging(int value);
    partial void OnHash_AlgorithmChanged();
    partial void OnExtension_TypeChanging(int value);
    partial void OnExtension_TypeChanged();
    #endregion
		
		public NAV_App_Installed_App()
		{
			this._NAV_App = default(EntityRef<NAV_App>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[App ID]", Storage="_App_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid App_ID
		{
			get
			{
				return this._App_ID;
			}
			set
			{
				if ((this._App_ID != value))
				{
					this.OnApp_IDChanging(value);
					this.SendPropertyChanging();
					this._App_ID = value;
					this.SendPropertyChanged("App_ID");
					this.OnApp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Package ID]", Storage="_Package_ID", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Package_ID
		{
			get
			{
				return this._Package_ID;
			}
			set
			{
				if ((this._Package_ID != value))
				{
					this.OnPackage_IDChanging(value);
					this.SendPropertyChanging();
					this._Package_ID = value;
					this.SendPropertyChanged("Package_ID");
					this.OnPackage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Major]", Storage="_Version_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Major
		{
			get
			{
				return this._Version_Major;
			}
			set
			{
				if ((this._Version_Major != value))
				{
					this.OnVersion_MajorChanging(value);
					this.SendPropertyChanging();
					this._Version_Major = value;
					this.SendPropertyChanged("Version_Major");
					this.OnVersion_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Minor]", Storage="_Version_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Minor
		{
			get
			{
				return this._Version_Minor;
			}
			set
			{
				if ((this._Version_Minor != value))
				{
					this.OnVersion_MinorChanging(value);
					this.SendPropertyChanging();
					this._Version_Minor = value;
					this.SendPropertyChanged("Version_Minor");
					this.OnVersion_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Build]", Storage="_Version_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Build
		{
			get
			{
				return this._Version_Build;
			}
			set
			{
				if ((this._Version_Build != value))
				{
					this.OnVersion_BuildChanging(value);
					this.SendPropertyChanging();
					this._Version_Build = value;
					this.SendPropertyChanged("Version_Build");
					this.OnVersion_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version Revision]", Storage="_Version_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Version_Revision
		{
			get
			{
				return this._Version_Revision;
			}
			set
			{
				if ((this._Version_Revision != value))
				{
					this.OnVersion_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Version_Revision = value;
					this.SendPropertyChanged("Version_Revision");
					this.OnVersion_RevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Major]", Storage="_Compatibility_Major", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Major
		{
			get
			{
				return this._Compatibility_Major;
			}
			set
			{
				if ((this._Compatibility_Major != value))
				{
					this.OnCompatibility_MajorChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Major = value;
					this.SendPropertyChanged("Compatibility_Major");
					this.OnCompatibility_MajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Minor]", Storage="_Compatibility_Minor", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Minor
		{
			get
			{
				return this._Compatibility_Minor;
			}
			set
			{
				if ((this._Compatibility_Minor != value))
				{
					this.OnCompatibility_MinorChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Minor = value;
					this.SendPropertyChanged("Compatibility_Minor");
					this.OnCompatibility_MinorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Build]", Storage="_Compatibility_Build", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Build
		{
			get
			{
				return this._Compatibility_Build;
			}
			set
			{
				if ((this._Compatibility_Build != value))
				{
					this.OnCompatibility_BuildChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Build = value;
					this.SendPropertyChanged("Compatibility_Build");
					this.OnCompatibility_BuildChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Compatibility Revision]", Storage="_Compatibility_Revision", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Compatibility_Revision
		{
			get
			{
				return this._Compatibility_Revision;
			}
			set
			{
				if ((this._Compatibility_Revision != value))
				{
					this.OnCompatibility_RevisionChanging(value);
					this.SendPropertyChanging();
					this._Compatibility_Revision = value;
					this.SendPropertyChanged("Compatibility_Revision");
					this.OnCompatibility_RevisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Content Hash]", Storage="_Content_Hash", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Content_Hash
		{
			get
			{
				return this._Content_Hash;
			}
			set
			{
				if ((this._Content_Hash != value))
				{
					this.OnContent_HashChanging(value);
					this.SendPropertyChanging();
					this._Content_Hash = value;
					this.SendPropertyChanged("Content_Hash");
					this.OnContent_HashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Hash Algorithm]", Storage="_Hash_Algorithm", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Hash_Algorithm
		{
			get
			{
				return this._Hash_Algorithm;
			}
			set
			{
				if ((this._Hash_Algorithm != value))
				{
					this.OnHash_AlgorithmChanging(value);
					this.SendPropertyChanging();
					this._Hash_Algorithm = value;
					this.SendPropertyChanged("Hash_Algorithm");
					this.OnHash_AlgorithmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Extension Type]", Storage="_Extension_Type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Extension_Type
		{
			get
			{
				return this._Extension_Type;
			}
			set
			{
				if ((this._Extension_Type != value))
				{
					this.OnExtension_TypeChanging(value);
					this.SendPropertyChanging();
					this._Extension_Type = value;
					this.SendPropertyChanged("Extension_Type");
					this.OnExtension_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Installed_App", Storage="_NAV_App", ThisKey="App_ID,Package_ID", OtherKey="ID,Package_ID", IsForeignKey=true)]
		public NAV_App NAV_App
		{
			get
			{
				return this._NAV_App.Entity;
			}
			set
			{
				NAV_App previousValue = this._NAV_App.Entity;
				if (((previousValue != value) 
							|| (this._NAV_App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAV_App.Entity = null;
						previousValue.NAV_App_Installed_App.Remove(this);
					}
					this._NAV_App.Entity = value;
					if ((value != null))
					{
						value.NAV_App_Installed_App.Add(this);
						this._App_ID = value.ID;
						this._Package_ID = value.Package_ID;
					}
					else
					{
						this._App_ID = default(System.Guid);
						this._Package_ID = default(System.Guid);
					}
					this.SendPropertyChanged("NAV_App");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Object Metadata]")]
	public partial class NAV_App_Object_Metadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _App_Package_ID;
		
		private int _Object_Type;
		
		private int _Object_ID;
		
		private int _Metadata_Format;
		
		private System.Data.Linq.Binary _Metadata;
		
		private System.Data.Linq.Binary _User_Code;
		
		private System.Data.Linq.Binary _User_AL_Code;
		
		private int _Metadata_Version;
		
		private string _Object_Subtype;
		
		private string _Object_Name;
		
		private string _Metadata_Hash;
		
		private EntityRef<NAV_App> _NAV_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnApp_Package_IDChanging(System.Guid value);
    partial void OnApp_Package_IDChanged();
    partial void OnObject_TypeChanging(int value);
    partial void OnObject_TypeChanged();
    partial void OnObject_IDChanging(int value);
    partial void OnObject_IDChanged();
    partial void OnMetadata_FormatChanging(int value);
    partial void OnMetadata_FormatChanged();
    partial void OnMetadataChanging(System.Data.Linq.Binary value);
    partial void OnMetadataChanged();
    partial void OnUser_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_CodeChanged();
    partial void OnUser_AL_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_AL_CodeChanged();
    partial void OnMetadata_VersionChanging(int value);
    partial void OnMetadata_VersionChanged();
    partial void OnObject_SubtypeChanging(string value);
    partial void OnObject_SubtypeChanged();
    partial void OnObject_NameChanging(string value);
    partial void OnObject_NameChanged();
    partial void OnMetadata_HashChanging(string value);
    partial void OnMetadata_HashChanged();
    #endregion
		
		public NAV_App_Object_Metadata()
		{
			this._NAV_App = default(EntityRef<NAV_App>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[App Package ID]", Storage="_App_Package_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid App_Package_ID
		{
			get
			{
				return this._App_Package_ID;
			}
			set
			{
				if ((this._App_Package_ID != value))
				{
					this.OnApp_Package_IDChanging(value);
					this.SendPropertyChanging();
					this._App_Package_ID = value;
					this.SendPropertyChanged("App_Package_ID");
					this.OnApp_Package_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Type]", Storage="_Object_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_Type
		{
			get
			{
				return this._Object_Type;
			}
			set
			{
				if ((this._Object_Type != value))
				{
					this.OnObject_TypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Type = value;
					this.SendPropertyChanged("Object_Type");
					this.OnObject_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object ID]", Storage="_Object_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_ID
		{
			get
			{
				return this._Object_ID;
			}
			set
			{
				if ((this._Object_ID != value))
				{
					this.OnObject_IDChanging(value);
					this.SendPropertyChanging();
					this._Object_ID = value;
					this.SendPropertyChanged("Object_ID");
					this.OnObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Metadata Format]", Storage="_Metadata_Format", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Metadata_Format
		{
			get
			{
				return this._Metadata_Format;
			}
			set
			{
				if ((this._Metadata_Format != value))
				{
					this.OnMetadata_FormatChanging(value);
					this.SendPropertyChanging();
					this._Metadata_Format = value;
					this.SendPropertyChanged("Metadata_Format");
					this.OnMetadata_FormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metadata", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Metadata
		{
			get
			{
				return this._Metadata;
			}
			set
			{
				if ((this._Metadata != value))
				{
					this.OnMetadataChanging(value);
					this.SendPropertyChanging();
					this._Metadata = value;
					this.SendPropertyChanged("Metadata");
					this.OnMetadataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User Code]", Storage="_User_Code", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_Code
		{
			get
			{
				return this._User_Code;
			}
			set
			{
				if ((this._User_Code != value))
				{
					this.OnUser_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_Code = value;
					this.SendPropertyChanged("User_Code");
					this.OnUser_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User AL Code]", Storage="_User_AL_Code", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_AL_Code
		{
			get
			{
				return this._User_AL_Code;
			}
			set
			{
				if ((this._User_AL_Code != value))
				{
					this.OnUser_AL_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_AL_Code = value;
					this.SendPropertyChanged("User_AL_Code");
					this.OnUser_AL_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Metadata Version]", Storage="_Metadata_Version", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Metadata_Version
		{
			get
			{
				return this._Metadata_Version;
			}
			set
			{
				if ((this._Metadata_Version != value))
				{
					this.OnMetadata_VersionChanging(value);
					this.SendPropertyChanging();
					this._Metadata_Version = value;
					this.SendPropertyChanged("Metadata_Version");
					this.OnMetadata_VersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Subtype]", Storage="_Object_Subtype", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Object_Subtype
		{
			get
			{
				return this._Object_Subtype;
			}
			set
			{
				if ((this._Object_Subtype != value))
				{
					this.OnObject_SubtypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Subtype = value;
					this.SendPropertyChanged("Object_Subtype");
					this.OnObject_SubtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Name]", Storage="_Object_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Object_Name
		{
			get
			{
				return this._Object_Name;
			}
			set
			{
				if ((this._Object_Name != value))
				{
					this.OnObject_NameChanging(value);
					this.SendPropertyChanging();
					this._Object_Name = value;
					this.SendPropertyChanged("Object_Name");
					this.OnObject_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Metadata Hash]", Storage="_Metadata_Hash", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Metadata_Hash
		{
			get
			{
				return this._Metadata_Hash;
			}
			set
			{
				if ((this._Metadata_Hash != value))
				{
					this.OnMetadata_HashChanging(value);
					this.SendPropertyChanging();
					this._Metadata_Hash = value;
					this.SendPropertyChanged("Metadata_Hash");
					this.OnMetadata_HashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Object_Metadata", Storage="_NAV_App", ThisKey="App_Package_ID", OtherKey="Package_ID", IsForeignKey=true)]
		public NAV_App NAV_App
		{
			get
			{
				return this._NAV_App.Entity;
			}
			set
			{
				NAV_App previousValue = this._NAV_App.Entity;
				if (((previousValue != value) 
							|| (this._NAV_App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAV_App.Entity = null;
						previousValue.NAV_App_Object_Metadata.Remove(this);
					}
					this._NAV_App.Entity = value;
					if ((value != null))
					{
						value.NAV_App_Object_Metadata.Add(this);
						this._App_Package_ID = value.Package_ID;
					}
					else
					{
						this._App_Package_ID = default(System.Guid);
					}
					this.SendPropertyChanged("NAV_App");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Object Prerequisites]")]
	public partial class NAV_App_Object_Prerequisites : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _Package_ID;
		
		private int _Type;
		
		private int _ID;
		
		private EntityRef<NAV_App> _NAV_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnPackage_IDChanging(System.Guid value);
    partial void OnPackage_IDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public NAV_App_Object_Prerequisites()
		{
			this._NAV_App = default(EntityRef<NAV_App>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Package ID]", Storage="_Package_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Package_ID
		{
			get
			{
				return this._Package_ID;
			}
			set
			{
				if ((this._Package_ID != value))
				{
					this.OnPackage_IDChanging(value);
					this.SendPropertyChanging();
					this._Package_ID = value;
					this.SendPropertyChanged("Package_ID");
					this.OnPackage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Object_Prerequisites", Storage="_NAV_App", ThisKey="Package_ID", OtherKey="Package_ID", IsForeignKey=true)]
		public NAV_App NAV_App
		{
			get
			{
				return this._NAV_App.Entity;
			}
			set
			{
				NAV_App previousValue = this._NAV_App.Entity;
				if (((previousValue != value) 
							|| (this._NAV_App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAV_App.Entity = null;
						previousValue.NAV_App_Object_Prerequisites.Remove(this);
					}
					this._NAV_App.Entity = value;
					if ((value != null))
					{
						value.NAV_App_Object_Prerequisites.Add(this);
						this._Package_ID = value.Package_ID;
					}
					else
					{
						this._Package_ID = default(System.Guid);
					}
					this.SendPropertyChanged("NAV_App");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Resource]")]
	public partial class NAV_App_Resource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _Package_ID;
		
		private int _Type;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Content;
		
		private EntityRef<NAV_App> _NAV_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnPackage_IDChanging(System.Guid value);
    partial void OnPackage_IDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    #endregion
		
		public NAV_App_Resource()
		{
			this._NAV_App = default(EntityRef<NAV_App>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Package ID]", Storage="_Package_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Package_ID
		{
			get
			{
				return this._Package_ID;
			}
			set
			{
				if ((this._Package_ID != value))
				{
					this.OnPackage_IDChanging(value);
					this.SendPropertyChanging();
					this._Package_ID = value;
					this.SendPropertyChanged("Package_ID");
					this.OnPackage_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Resource", Storage="_NAV_App", ThisKey="Package_ID", OtherKey="Package_ID", IsForeignKey=true)]
		public NAV_App NAV_App
		{
			get
			{
				return this._NAV_App.Entity;
			}
			set
			{
				NAV_App previousValue = this._NAV_App.Entity;
				if (((previousValue != value) 
							|| (this._NAV_App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAV_App.Entity = null;
						previousValue.NAV_App_Resource.Remove(this);
					}
					this._NAV_App.Entity = value;
					if ((value != null))
					{
						value.NAV_App_Resource.Add(this);
						this._Package_ID = value.Package_ID;
					}
					else
					{
						this._Package_ID = default(System.Guid);
					}
					this.SendPropertyChanged("NAV_App");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Tenant Add-In]")]
	public partial class NAV_App_Tenant_Add_In : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private System.Guid _App_ID;
		
		private string _Add_In_Name;
		
		private string _Public_Key_Token;
		
		private string _Version;
		
		private int _Category;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Resource;
		
		private EntityRef<NAV_App> _NAV_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnApp_IDChanging(System.Guid value);
    partial void OnApp_IDChanged();
    partial void OnAdd_In_NameChanging(string value);
    partial void OnAdd_In_NameChanged();
    partial void OnPublic_Key_TokenChanging(string value);
    partial void OnPublic_Key_TokenChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnCategoryChanging(int value);
    partial void OnCategoryChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnResourceChanging(System.Data.Linq.Binary value);
    partial void OnResourceChanged();
    #endregion
		
		public NAV_App_Tenant_Add_In()
		{
			this._NAV_App = default(EntityRef<NAV_App>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[App ID]", Storage="_App_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid App_ID
		{
			get
			{
				return this._App_ID;
			}
			set
			{
				if ((this._App_ID != value))
				{
					this.OnApp_IDChanging(value);
					this.SendPropertyChanging();
					this._App_ID = value;
					this.SendPropertyChanged("App_ID");
					this.OnApp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Add-In Name]", Storage="_Add_In_Name", DbType="NVarChar(220) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Add_In_Name
		{
			get
			{
				return this._Add_In_Name;
			}
			set
			{
				if ((this._Add_In_Name != value))
				{
					this.OnAdd_In_NameChanging(value);
					this.SendPropertyChanging();
					this._Add_In_Name = value;
					this.SendPropertyChanged("Add_In_Name");
					this.OnAdd_In_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Public Key Token]", Storage="_Public_Key_Token", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Public_Key_Token
		{
			get
			{
				return this._Public_Key_Token;
			}
			set
			{
				if ((this._Public_Key_Token != value))
				{
					this.OnPublic_Key_TokenChanging(value);
					this.SendPropertyChanging();
					this._Public_Key_Token = value;
					this.SendPropertyChanged("Public_Key_Token");
					this.OnPublic_Key_TokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resource", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Resource
		{
			get
			{
				return this._Resource;
			}
			set
			{
				if ((this._Resource != value))
				{
					this.OnResourceChanging(value);
					this.SendPropertyChanging();
					this._Resource = value;
					this.SendPropertyChanged("Resource");
					this.OnResourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Tenant_Add_In", Storage="_NAV_App", ThisKey="App_ID", OtherKey="ID", IsForeignKey=true)]
		public NAV_App NAV_App
		{
			get
			{
				return this._NAV_App.Entity;
			}
			set
			{
				NAV_App previousValue = this._NAV_App.Entity;
				if (((previousValue != value) 
							|| (this._NAV_App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAV_App.Entity = null;
						previousValue.NAV_App_Tenant_Add_In.Remove(this);
					}
					this._NAV_App.Entity = value;
					if ((value != null))
					{
						value.NAV_App_Tenant_Add_In.Add(this);
						this._App_ID = value.ID;
					}
					else
					{
						this._App_ID = default(System.Guid);
					}
					this.SendPropertyChanged("NAV_App");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[NAV App Tenant App]")]
	public partial class NAV_App_Tenant_App : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private string _Tenant_ID;
		
		private System.Guid _App_Package_ID;
		
		private EntityRef<NAV_App> _NAV_App;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnTenant_IDChanging(string value);
    partial void OnTenant_IDChanged();
    partial void OnApp_Package_IDChanging(System.Guid value);
    partial void OnApp_Package_IDChanged();
    #endregion
		
		public NAV_App_Tenant_App()
		{
			this._NAV_App = default(EntityRef<NAV_App>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Tenant ID]", Storage="_Tenant_ID", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Tenant_ID
		{
			get
			{
				return this._Tenant_ID;
			}
			set
			{
				if ((this._Tenant_ID != value))
				{
					this.OnTenant_IDChanging(value);
					this.SendPropertyChanging();
					this._Tenant_ID = value;
					this.SendPropertyChanged("Tenant_ID");
					this.OnTenant_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[App Package ID]", Storage="_App_Package_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid App_Package_ID
		{
			get
			{
				return this._App_Package_ID;
			}
			set
			{
				if ((this._App_Package_ID != value))
				{
					this.OnApp_Package_IDChanging(value);
					this.SendPropertyChanging();
					this._App_Package_ID = value;
					this.SendPropertyChanged("App_Package_ID");
					this.OnApp_Package_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAV_App_NAV_App_Tenant_App", Storage="_NAV_App", ThisKey="App_Package_ID,Tenant_ID", OtherKey="Package_ID,Tenant_ID", IsForeignKey=true)]
		public NAV_App NAV_App
		{
			get
			{
				return this._NAV_App.Entity;
			}
			set
			{
				NAV_App previousValue = this._NAV_App.Entity;
				if (((previousValue != value) 
							|| (this._NAV_App.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAV_App.Entity = null;
						previousValue.NAV_App_Tenant_App.Remove(this);
					}
					this._NAV_App.Entity = value;
					if ((value != null))
					{
						value.NAV_App_Tenant_App.Add(this);
						this._App_Package_ID = value.Package_ID;
						this._Tenant_ID = value.Tenant_ID;
					}
					else
					{
						this._App_Package_ID = default(System.Guid);
						this._Tenant_ID = default(string);
					}
					this.SendPropertyChanged("NAV_App");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
