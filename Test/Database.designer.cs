#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Demo Database NAV (10-0)")]
	public partial class DatabaseOne : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertObject(Object instance);
    partial void UpdateObject(Object instance);
    partial void DeleteObject(Object instance);
    partial void InsertObject_Metadata(Object_Metadata instance);
    partial void UpdateObject_Metadata(Object_Metadata instance);
    partial void DeleteObject_Metadata(Object_Metadata instance);
    #endregion
		
		public DatabaseOne() : 
				base(global::Test.Properties.Settings.Default.Demo_Database_NAV__10_0_ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOne(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOne(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOne(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseOne(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Object> Object
		{
			get
			{
				return this.GetTable<Object>();
			}
		}
		
		public System.Data.Linq.Table<Object_Metadata> Object_Metadata
		{
			get
			{
				return this.GetTable<Object_Metadata>();
			}
		}

        public static void CreateTable<T>(T table)
        {
            var type = typeof(T);

            foreach (var prob in type.GetCustomAttributes<ColumnAttribute>())
            {
                
            }

          
            
        }
    }
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Object")]
	public partial class Object : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private int _Type;
		
		private string _Company_Name;
		
		private int _ID;
		
		private string _Name;
		
		private byte _Modified;
		
		private byte _Compiled;
		
		private System.Data.Linq.Binary _BLOB_Reference;
		
		private int _BLOB_Size;
		
		private int _DBM_Table_No_;
		
		private System.DateTime _Date;
		
		private System.DateTime _Time;
		
		private string _Version_List;
		
		private byte _Locked;
		
		private string _Locked_By;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedChanging(byte value);
    partial void OnModifiedChanged();
    partial void OnCompiledChanging(byte value);
    partial void OnCompiledChanged();
    partial void OnBLOB_ReferenceChanging(System.Data.Linq.Binary value);
    partial void OnBLOB_ReferenceChanged();
    partial void OnBLOB_SizeChanging(int value);
    partial void OnBLOB_SizeChanged();
    partial void OnDBM_Table_No_Changing(int value);
    partial void OnDBM_Table_No_Changed();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnVersion_ListChanging(string value);
    partial void OnVersion_ListChanged();
    partial void OnLockedChanging(byte value);
    partial void OnLockedChanged();
    partial void OnLocked_ByChanging(string value);
    partial void OnLocked_ByChanged();
    #endregion
		
		public Object()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Company Name]", Storage="_Company_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string Company_Name
		{
			get
			{
				return this._Company_Name;
			}
			set
			{
				if ((this._Company_Name != value))
				{
					this.OnCompany_NameChanging(value);
					this.SendPropertyChanging();
					this._Company_Name = value;
					this.SendPropertyChanged("Company_Name");
					this.OnCompany_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Compiled", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Compiled
		{
			get
			{
				return this._Compiled;
			}
			set
			{
				if ((this._Compiled != value))
				{
					this.OnCompiledChanging(value);
					this.SendPropertyChanging();
					this._Compiled = value;
					this.SendPropertyChanged("Compiled");
					this.OnCompiledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BLOB Reference]", Storage="_BLOB_Reference", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BLOB_Reference
		{
			get
			{
				return this._BLOB_Reference;
			}
			set
			{
				if ((this._BLOB_Reference != value))
				{
					this.OnBLOB_ReferenceChanging(value);
					this.SendPropertyChanging();
					this._BLOB_Reference = value;
					this.SendPropertyChanged("BLOB_Reference");
					this.OnBLOB_ReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[BLOB Size]", Storage="_BLOB_Size", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int BLOB_Size
		{
			get
			{
				return this._BLOB_Size;
			}
			set
			{
				if ((this._BLOB_Size != value))
				{
					this.OnBLOB_SizeChanging(value);
					this.SendPropertyChanging();
					this._BLOB_Size = value;
					this.SendPropertyChanged("BLOB_Size");
					this.OnBLOB_SizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[DBM Table No_]", Storage="_DBM_Table_No_", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DBM_Table_No_
		{
			get
			{
				return this._DBM_Table_No_;
			}
			set
			{
				if ((this._DBM_Table_No_ != value))
				{
					this.OnDBM_Table_No_Changing(value);
					this.SendPropertyChanging();
					this._DBM_Table_No_ = value;
					this.SendPropertyChanged("DBM_Table_No_");
					this.OnDBM_Table_No_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Version List]", Storage="_Version_List", DbType="VarChar(248) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Version_List
		{
			get
			{
				return this._Version_List;
			}
			set
			{
				if ((this._Version_List != value))
				{
					this.OnVersion_ListChanging(value);
					this.SendPropertyChanging();
					this._Version_List = value;
					this.SendPropertyChanged("Version_List");
					this.OnVersion_ListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Locked By]", Storage="_Locked_By", DbType="VarChar(132) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Locked_By
		{
			get
			{
				return this._Locked_By;
			}
			set
			{
				if ((this._Locked_By != value))
				{
					this.OnLocked_ByChanging(value);
					this.SendPropertyChanging();
					this._Locked_By = value;
					this.SendPropertyChanged("Locked_By");
					this.OnLocked_ByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Object Metadata]")]
	public partial class Object_Metadata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _timestamp;
		
		private int _Object_Type;
		
		private int _Object_ID;
		
		private System.Data.Linq.Binary _Metadata;
		
		private System.Data.Linq.Binary _User_Code;
		
		private System.Data.Linq.Binary _User_AL_Code;
		
		private int _Metadata_Version;
		
		private string _Hash;
		
		private string _Object_Subtype;
		
		private byte _Has_Subscribers;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimestampChanging(System.Data.Linq.Binary value);
    partial void OntimestampChanged();
    partial void OnObject_TypeChanging(int value);
    partial void OnObject_TypeChanged();
    partial void OnObject_IDChanging(int value);
    partial void OnObject_IDChanged();
    partial void OnMetadataChanging(System.Data.Linq.Binary value);
    partial void OnMetadataChanged();
    partial void OnUser_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_CodeChanged();
    partial void OnUser_AL_CodeChanging(System.Data.Linq.Binary value);
    partial void OnUser_AL_CodeChanged();
    partial void OnMetadata_VersionChanging(int value);
    partial void OnMetadata_VersionChanged();
    partial void OnHashChanging(string value);
    partial void OnHashChanged();
    partial void OnObject_SubtypeChanging(string value);
    partial void OnObject_SubtypeChanged();
    partial void OnHas_SubscribersChanging(byte value);
    partial void OnHas_SubscribersChanged();
    #endregion
		
		public Object_Metadata()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Type]", Storage="_Object_Type", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_Type
		{
			get
			{
				return this._Object_Type;
			}
			set
			{
				if ((this._Object_Type != value))
				{
					this.OnObject_TypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Type = value;
					this.SendPropertyChanged("Object_Type");
					this.OnObject_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object ID]", Storage="_Object_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int Object_ID
		{
			get
			{
				return this._Object_ID;
			}
			set
			{
				if ((this._Object_ID != value))
				{
					this.OnObject_IDChanging(value);
					this.SendPropertyChanging();
					this._Object_ID = value;
					this.SendPropertyChanged("Object_ID");
					this.OnObject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Metadata", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Metadata
		{
			get
			{
				return this._Metadata;
			}
			set
			{
				if ((this._Metadata != value))
				{
					this.OnMetadataChanging(value);
					this.SendPropertyChanging();
					this._Metadata = value;
					this.SendPropertyChanged("Metadata");
					this.OnMetadataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User Code]", Storage="_User_Code", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_Code
		{
			get
			{
				return this._User_Code;
			}
			set
			{
				if ((this._User_Code != value))
				{
					this.OnUser_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_Code = value;
					this.SendPropertyChanged("User_Code");
					this.OnUser_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User AL Code]", Storage="_User_AL_Code", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary User_AL_Code
		{
			get
			{
				return this._User_AL_Code;
			}
			set
			{
				if ((this._User_AL_Code != value))
				{
					this.OnUser_AL_CodeChanging(value);
					this.SendPropertyChanging();
					this._User_AL_Code = value;
					this.SendPropertyChanged("User_AL_Code");
					this.OnUser_AL_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Metadata Version]", Storage="_Metadata_Version", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Metadata_Version
		{
			get
			{
				return this._Metadata_Version;
			}
			set
			{
				if ((this._Metadata_Version != value))
				{
					this.OnMetadata_VersionChanging(value);
					this.SendPropertyChanging();
					this._Metadata_Version = value;
					this.SendPropertyChanged("Metadata_Version");
					this.OnMetadata_VersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hash", DbType="NVarChar(32) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Hash
		{
			get
			{
				return this._Hash;
			}
			set
			{
				if ((this._Hash != value))
				{
					this.OnHashChanging(value);
					this.SendPropertyChanging();
					this._Hash = value;
					this.SendPropertyChanged("Hash");
					this.OnHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Object Subtype]", Storage="_Object_Subtype", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Object_Subtype
		{
			get
			{
				return this._Object_Subtype;
			}
			set
			{
				if ((this._Object_Subtype != value))
				{
					this.OnObject_SubtypeChanging(value);
					this.SendPropertyChanging();
					this._Object_Subtype = value;
					this.SendPropertyChanged("Object_Subtype");
					this.OnObject_SubtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Has Subscribers]", Storage="_Has_Subscribers", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte Has_Subscribers
		{
			get
			{
				return this._Has_Subscribers;
			}
			set
			{
				if ((this._Has_Subscribers != value))
				{
					this.OnHas_SubscribersChanging(value);
					this.SendPropertyChanging();
					this._Has_Subscribers = value;
					this.SendPropertyChanged("Has_Subscribers");
					this.OnHas_SubscribersChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
